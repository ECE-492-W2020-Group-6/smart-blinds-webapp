{"version":3,"sources":["res/Classes/BlindAPI/BlindAPI.ts","res/blindTypes.tsx","res/Classes/Blind/Blind.ts","config.ts","res/styles/Themes/themes.ts","Components/Atoms/Header/Header.tsx","Components/Molecules/StatusPaper/StatusPaper.tsx","Components/Atoms/Footer/Footer.tsx","Components/Molecules/AddModal/AddModal.tsx","Components/Pages/Splash/Splash.tsx","Components/Pages/ViewSchedules/ViewSchedules.tsx","Components/Molecules/CommandModal/CommandModal.tsx","Components/Pages/BlindMenu/BlindMenu.tsx","Components/Pages/CreateSchedule/CreateSchedule.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["BlindAPI","credentials","this","endpoint","method","body","requestInit","mode","headers","Auth","password","fetch","address","daysList","API","Blind","name","createFetch","response","clone","json","responseJSON","status","indoorTemp","temperature","motorPosition","position","promise","Promise","resolve","reject","setTimeout","schedule","now","Date","scheduleDay","getUTCDay","length","defaultMode","forEach","timeSlot","TimeslotIsActive","time","getTimeOfDay","date","getUTCHours","getUTCMinutes","getUTCSeconds","timeOfDay","start","end","type","default_mode","percentage","default_pos","monday","map","timeBlockFromjson","tuesday","wednesday","thursday","friday","saturday","sunday","convSchedule","scheduleToJson","JSON","stringify","command","callback","convSched","pos","undefined","timezone","timeBlockToJson","block","padNumber","val","str","String","getHours","getMinutes","jsonObj","defaultBlindMode","t1","t2","setHours","defaultSchedule","realTestBlind","config","root","defaultPath","mainTitle","MOTORMIDPOINT","testCases","schedules","stats","blinds","defaultObjects","blindMode","defaultTheme","createMuiTheme","palette","primary","lightGreen","secondary","lightBlue","info","yellow","withStyles","theme","createStyles","flexGrow","menuButton","marginRight","spacing","title","props","classes","Fragment","AppBar","Toolbar","IconButton","component","Link","to","edge","className","color","aria-label","Typography","variant","padding","Paper","List","ListItem","ListItemIcon","ListItemText","Number","toFixed","appBar","top","bottom","toolBar","display","justifyContent","buttons","button","index","key","getModalStyle","left","transform","modalDiv","width","backgroundColor","background","paper","border","borderRadius","boxShadow","shadows","formControl","margin","midWidth","maxWidth","inputs","alignItems","flexWrap","slider","open","handleClose","addBlind","useState","modalStyle","setName","creds","setCreds","Modal","onClose","style","aria-labelledby","aria-describedby","id","FormControl","TextField","required","onChange","event","target","value","label","defaultValue","autoComplete","Button","onClick","list","blindList","switchBlind","defaultStats","currentStats","setStats","useEffect","getStatus","then","statusResponse","modalOpen","setOpen","Divider","blind","getAddress","getName","ViewSchedules","sendCommand","duration","setDuration","setMode","angle","setAngle","InputLabel","Select","MenuItem","Slider","min","max","step","Array","isArray","updateValues","statsResponse","setPosition","CalendarSheet","ReactDataSheet","weekWrapper","gridTemplateColumns","gridTemplateRows","gridAutoFlow","justifyItems","timeSlotWrapper","overflow","height","dayHeader","textAlign","tableRow","timeTable","borderBottomColor","tableLayout","borderSpacing","minWidth","fitTables","ecoClass","verticalAlign","dark","grey","lightClass","light","darkClass","manualClass","balancedClass","typeSelect","parse","setSchedule","mapTimeToIndex","Math","ceil","modeClasses","ECO","LIGHT","DARK","MANUAL","BALANCED","modeNames","gridFromSchedule","console","log","grid","day","dayName","push","readOnly","startIdx","endIdx","idx","setGrid","setPercentage","i","j","selection","setSelection","getSchedule","scheduleResponse","saveSchedule","newSchedule","hoursFromIdx","floor","minsFromIdx","endDate","setMinutes","scheduleFromGrid","weekDays","toLocaleUpperCase","slice","dayTitle","timeLegend","hour","period","minute","timeString","calendarGrid","data","valueRenderer","cell","rowRenderer","children","onSelect","calendarLegend","sheetRenderer","tempgrid","row","applySelection","testBlinds","setBlinds","currentBlind","setBlind","setTitle","removeBlind","blindsCopy","splice","location","useLocation","pathname","CssBaseline","ThemeProvider","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.050fc826.chunk.js","sourcesContent":["import { ICredentials } from \"../../Interfaces\";\n\ntype VALID_METHOD = \"GET\" | \"POST\";\nclass BlindAPI {\n  private credentials: ICredentials;\n\n  constructor(credentials: ICredentials) {\n    this.credentials = credentials;\n  }\n\n  async createFetch(\n    endpoint: string,\n    method: VALID_METHOD,\n    body?: any\n  ): Promise<Response> {\n    let requestInit: RequestInit = {};\n    switch (method) {\n      case \"GET\":\n        requestInit = {\n          method: method,\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"text/json\",\n            Auth: this.credentials.password,\n          },\n          // body: body\n        };\n        break;\n      case \"POST\":\n        requestInit = {\n          method: method,\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Auth: this.credentials.password,\n          },\n          body: body,\n        };\n        break;\n    }\n    // console.log(this.credentials.address + endpoint, requestInit);\n    return fetch(this.credentials.address + endpoint, requestInit);\n  }\n}\n\nexport default BlindAPI;\n","/**\n * Entity Names:\n *  DAY_OF_WEEK\n *  daysList\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Mar 3, 2020\n * Derived From:\n *  N/A\n *\n * Type declarations and utilities\n */\n\nexport type BLIND_MODE = \"ECO\" | \"LIGHT\" | \"DARK\" | \"BALANCED\" | \"MANUAL\";\nexport type DAY_OF_WEEK =\n  | \"sunday\"\n  | \"monday\"\n  | \"tuesday\"\n  | \"wednesday\"\n  | \"thursday\"\n  | \"friday\"\n  | \"saturday\";\n\nexport const daysList: DAY_OF_WEEK[] = [\n  \"sunday\",\n  \"monday\",\n  \"tuesday\",\n  \"wednesday\",\n  \"thursday\",\n  \"friday\",\n  \"saturday\"\n];\n","/**\n * Entity Names:\n *  Blind\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  N/A\n *\n * Object that abstracts blind actions to the rest of the application\n */\nimport BlindAPI from \"../BlindAPI\";\nimport {\n  ICredentials,\n  IStats,\n  ISchedule,\n  IBlindMode,\n  ITimeSlot,\n  IBlindCommand,\n} from \"../../Interfaces\";\n// import config from \"../../../config\";\nimport { daysList } from \"../../blindTypes\";\n\nconst API = \"/api/v1\";\n\n/**\n * Abstracts Smart Blind operation\n */\nclass Blind {\n  private name: string;\n  private BlindAPI: BlindAPI;\n  private address: string;\n  /**\n   * @param name Name of blind device\n   * @param credentials credential object for access and authentication\n   */\n  constructor(name: string, credentials: ICredentials) {\n    this.BlindAPI = new BlindAPI(credentials);\n    this.name = name;\n    this.address = credentials.address;\n  }\n\n  /**\n   * @returns a promise that resolves to an [[IStats]] object\n   */\n  async getStatus(): Promise<IStats> {\n    let response = await this.BlindAPI.createFetch(API + \"/status\", \"GET\");\n    let responseJSON = await response.clone().json();\n    let status: IStats = {\n      indoorTemp: responseJSON.temperature,\n      motorPosition: responseJSON.position,\n      mode: responseJSON.mode,\n    };\n    const promise = new Promise<IStats>((resolve, reject) => {\n      setTimeout(() => {\n        resolve(status);\n      }, 500);\n    });\n    return promise;\n  }\n\n  /**\n   * @returns current behavior mode\n   */\n  GetCurrentBehavior(schedule: ISchedule): IBlindMode {\n    let now: Date = new Date();\n    let scheduleDay: ITimeSlot[] = schedule[daysList[now.getUTCDay()]];\n    if (scheduleDay.length === 0) {\n      return schedule.defaultMode;\n    }\n    scheduleDay.forEach((timeSlot: ITimeSlot) => {\n      if (this.TimeslotIsActive(timeSlot, now)) {\n        return timeSlot.mode;\n      }\n    });\n    return schedule.defaultMode;\n  }\n\n  /**\n   * @returns if specified time is in the specified time slot\n   */\n  TimeslotIsActive(timeSlot: ITimeSlot, time: Date): boolean {\n    function getTimeOfDay(date: Date) {\n      return `${date.getUTCHours}${date.getUTCMinutes}${date.getUTCSeconds}`;\n    }\n    let timeOfDay: string = getTimeOfDay(time);\n    if (\n      timeOfDay >= getTimeOfDay(timeSlot.start) &&\n      timeOfDay < getTimeOfDay(timeSlot.end)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @returns a promise that resolves to an [[ISchedule]] object\n   */\n  async getSchedule(): Promise<ISchedule> {\n    let response = await this.BlindAPI.createFetch(API + \"/schedule\", \"GET\");\n    let responseJSON = await response.clone().json();\n    let schedule: ISchedule = {\n      defaultMode: {\n        type: responseJSON.default_mode,\n        percentage: responseJSON.default_pos,\n      },\n      monday: responseJSON.schedule.monday.map(this.timeBlockFromjson),\n      tuesday: responseJSON.schedule.tuesday.map(this.timeBlockFromjson),\n      wednesday: responseJSON.schedule.wednesday.map(this.timeBlockFromjson),\n      thursday: responseJSON.schedule.thursday.map(this.timeBlockFromjson),\n      friday: responseJSON.schedule.friday.map(this.timeBlockFromjson),\n      saturday: responseJSON.schedule.saturday.map(this.timeBlockFromjson),\n      sunday: responseJSON.schedule.sunday.map(this.timeBlockFromjson),\n    };\n    // console.log(\"RESPONSLDKFJ\", responseJSON);\n    const promise = new Promise<ISchedule>((resolve, reject) => {\n      setTimeout(() => {\n        resolve(schedule);\n      }, 500);\n    });\n\n    return promise;\n  }\n\n  /**\n   * @param schedule sends or configures a new schedule to a device\n   */\n  async setSchedule(schedule: ISchedule) {\n    // let convSchedule = {\n    //   default_mode: schedule.defaultMode.type,\n    //   default_pos: schedule.defaultMode.percentage,\n    //   schedule: {\n    //     monday: schedule.monday,\n    //     tuesday: schedule.tuesday,\n    //     wednesday: schedule.wednesday,\n    //     thursday: schedule.thursday,\n    //     friday: schedule.friday,\n    //     saturday: schedule.saturday,\n    //     sunday: schedule.sunday,\n    //   },\n    //   // timezone: new Date().getTimezoneOffset(),\n    //   timezone: \"America/Edmonton\",\n    // };\n    let convSchedule = this.scheduleToJson(schedule);\n\n    this.BlindAPI.createFetch(\n      API + \"/schedule\",\n      \"POST\",\n      JSON.stringify(convSchedule)\n    );\n    // let responseJSON = await response.clone().json();\n  }\n\n  /**\n   * @param command sends a new command to the device\n   */\n  async sendCommand(command: IBlindCommand, callback: (response: any) => void) {\n    let response = await this.BlindAPI.createFetch(\n      API + \"/command\",\n      \"POST\",\n      JSON.stringify(command)\n    );\n    let responseJSON = await response.clone().json();\n    callback(responseJSON);\n  }\n\n  /**\n   * @returns name of the blind\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param name sets a new name for the blind\n   */\n  setName(name: string) {\n    this.name = name;\n  }\n\n  /**\n   * @returns IP address of blind device\n   */\n  getAddress(): string {\n    return this.address;\n  }\n\n  /**\n   * Custom JSONify for schedule to match server's specifications\n   */\n  private scheduleToJson(convSched: ISchedule): Object {\n    let pos = convSched.defaultMode.percentage;\n    if (pos === undefined) {\n      pos = null;\n    }\n    let jsonData = {\n      default_mode: convSched.defaultMode.type,\n      default_pos: pos,\n      timezone: \"America/Edmonton\",\n      schedule: {\n        monday: convSched.monday.map(this.timeBlockToJson),\n        tuesday: convSched.tuesday.map(this.timeBlockToJson),\n        wednesday: convSched.wednesday.map(this.timeBlockToJson),\n        thursday: convSched.thursday.map(this.timeBlockToJson),\n        friday: convSched.friday.map(this.timeBlockToJson),\n        saturday: convSched.saturday.map(this.timeBlockToJson),\n        sunday: convSched.sunday.map(this.timeBlockToJson),\n      },\n    };\n\n    return jsonData;\n  }\n\n  /**\n   * Custom JSONify for time blocks to match server's specifications\n   */\n  private timeBlockToJson(block: ITimeSlot): Object {\n    let pos = block.mode.percentage;\n    if (pos === undefined) {\n      pos = null;\n    }\n    let padNumber = (val: number) => {\n      let str = String(val);\n      while (str.length < 2) {\n        str = \"0\" + str;\n      }\n      return str;\n    };\n    let jsonData = {\n      start:\n        padNumber(block.start.getHours()) +\n        \":\" +\n        padNumber(block.start.getMinutes()),\n      end:\n        padNumber(block.end.getHours()) +\n        \":\" +\n        padNumber(block.end.getMinutes()),\n      mode: block.mode.type,\n      position: pos,\n    };\n\n    return jsonData;\n  }\n\n  /**\n   * Custom deserializer for server formated time blocks\n   *\n   */\n  private timeBlockFromjson(jsonObj: any): ITimeSlot {\n    let timeBlock: ITimeSlot = {\n      start: new Date(\"2020-01-01T\" + jsonObj.start),\n      end: new Date(\"2020-01-01T\" + jsonObj.end),\n      mode: { type: jsonObj.mode, percentage: jsonObj.position },\n    };\n\n    return timeBlock;\n  }\n}\n\nexport default Blind;\n","import { ISchedule, IStats, IBlindMode, ICredentials } from \"./res/Interfaces\";\nimport Blind from \"../src/res/Classes/Blind\";\n\nconst defaultBlindMode: IBlindMode = {\n  type: \"BALANCED\",\n};\n\n// const onBlindMode: IBlindMode = {\n//   type: \"LIGHT\"\n// };\n\n// const offBlindMode: IBlindMode = {\n//   type: \"DARK\"\n// };\n\n// const customBlindMode: IBlindMode = {\n//   type: \"CUSTOM\"\n// };\n\nconst t1 = new Date(\"2020-03-22T06:00:00Z\");\nvar t2 = new Date(t1);\nt2.setHours(4);\nvar t3 = new Date(t2);\nt3.setHours(8);\n\nconst defaultSchedule: ISchedule = {\n  defaultMode: defaultBlindMode,\n  monday: [],\n  tuesday: [],\n  wednesday: [],\n  thursday: [],\n  friday: [],\n  saturday: [],\n  sunday: [],\n};\nlet realTestBlind: Blind = new Blind(\"Real Blind\", {\n  address: \"http://10.147.17.181:5000\",\n  password: \"\",\n});\n\nlet localServerBlind: Blind = new Blind(\"Localhost\", {\n  address: \"http://127.0.0.1:5000\",\n  password: \"\",\n});\n\n// let testBlind: Blind = new Blind(\"Test Blinds\", {\n//   address: \"localhost\",\n//   password: \"123pass\",\n// });\n// let otherBlind: Blind = new Blind(\"Other blinds\", {\n//   address: \"1.255.02.3\",\n//   password: \"pass123\",\n// });\nconst sampleStats: IStats = {\n  indoorTemp: 21,\n  // outdoorTemp: 20,\n  // cloudCoverage: \"Low\",\n  mode: \"DARK\",\n  motorPosition: 0,\n};\n\nconst defaultStats: IStats = {\n  indoorTemp: 0,\n  // outdoorTemp: 0,\n  // cloudCoverage: \"Low\",\n  mode: \"BALANCED\",\n  motorPosition: 0,\n};\n\ninterface IConfig {\n  root: string;\n  defaultPath: string;\n  mainTitle: string;\n  MOTORMIDPOINT: number;\n  testCases: {\n    schedules: ISchedule[];\n    stats: IStats[];\n    blinds: Blind[];\n  };\n  defaultObjects: {\n    schedule: ISchedule;\n    blindMode: IBlindMode;\n    stats: IStats;\n    credentials: ICredentials;\n  };\n}\n\nconst config: IConfig = {\n  root: \"/smart-blinds-webapp\",\n  defaultPath: \"/\",\n  mainTitle: \"Smart Blinds\",\n  MOTORMIDPOINT: -30,\n  testCases: {\n    schedules: [defaultSchedule],\n    stats: [sampleStats],\n    blinds: [localServerBlind, realTestBlind],\n  },\n  defaultObjects: {\n    schedule: defaultSchedule,\n    blindMode: defaultBlindMode,\n    stats: defaultStats,\n    credentials: { address: \"http://10.147.17.181:5000\", password: \"\" },\n  },\n};\n\nexport default config;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n// import purple from \"@material-ui/core/colors/purple\";\n// import common from \"@material-ui/core/colors/common\";\n// import blueGrey from \"@material-ui/core/colors/blueGrey\";\n// import blue from \"@material-ui/core/colors/blue\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\n// import grey from \"@material-ui/core/colors/grey\";\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\n\nexport const defaultTheme = createMuiTheme({\n  palette: {\n    primary: lightGreen,\n    secondary: lightBlue,\n    info: yellow\n  }\n});\n","/**\n * Entity Names:\n *  Header\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  create-react-app\n *\n * The Header functional component sits at the top of the application.\n *\n */\nimport React from \"react\";\nimport config from \"../../../config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Toolbar,\n  IconButton,\n  AppBar,\n  Typography\n} from \"@material-ui/core\";\n// import HomeIcon from \"@material-ui/icons/Home\";\nimport LineWeightIcon from \"@material-ui/icons/LineWeight\";\n\n/**\n * 'styles' allows for styling within typscript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    }\n  });\n\n/**\n * @typeparam <typeof styles>\n * @param title title to display in the header\n */\ninterface Props extends WithStyles<typeof styles> {\n  title: string;\n}\n\n/**\n * The [[Header]] functional component sits at the top of the application.\n * @param props used to pass in stylings\n * @returns React Element; the application header\n */\nconst Header: React.FC<Props> = props => {\n  const { classes, title } = props;\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            component={Link}\n            to={config.root + \"/\"}\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <LineWeightIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","/**\n * Entity Names:\n *  StatusPaper\n *  props\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  material-ui\n *\n * Sub component that provides received stats in a compact display.\n * Based on a material-ui 'Paper' component\n */\nimport React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n// import AcUnitIcon from \"@material-ui/icons/AcUnit\";\n// import WbSunnyIcon from \"@material-ui/icons/WbSunny\";\n// import CloudIcon from \"@material-ui/icons/Cloud\";\nimport { IStats } from \"../../../res/Interfaces\";\n\n/**\n * 'styles' allows for styling within typscript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0),\n    },\n    title: {\n      flexGrow: 1,\n      padding: theme.spacing(2),\n    },\n  });\n\n/**\n * @typeparam <typeof styles>\n * @param stats stats to display\n */\ninterface Props extends WithStyles<typeof styles> {\n  stats: IStats;\n}\n\n/**\n * The [[StatusPaper]] functional component provides stats in a compact display\n * @param props used to pass in stylings\n * @returns React Element; A material-ui 'paper' component displaying stats\n */\nconst StatusPaper: React.FC<Props> = (props) => {\n  const { classes, stats } = props;\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography className={classes.title} color=\"textPrimary\">\n          Current Status:\n        </Typography>\n        <List className={classes.root}></List>\n        <ListItem>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Indoor Temperature\"\n            primary={`${Number(stats.indoorTemp).toFixed(2)}°`}\n          />\n        </ListItem>\n        {/* <ListItem>\n          <ListItemIcon>\n            {stats.outdoorTemp < 5 ? <AcUnitIcon /> : <WbSunnyIcon />}\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Outdoor Temperature\"\n            primary={`${stats.outdoorTemp}°`}\n          />\n        </ListItem> */}\n        {/* <ListItem>\n          <ListItemIcon>\n            <CloudIcon />\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Cloud Coverage\"\n            primary={stats.cloudCoverage}\n          />\n        </ListItem> */}\n      </Paper>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(StatusPaper);\n","/**\n * Entity Names:\n *  Header\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 11, 2020\n * Derived From:\n *  create-react-app\n *\n * The Footer functional component provides buttons at the bottom of the screen.\n *\n */\nimport React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Toolbar,\n  AppBar\n} from \"@material-ui/core\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    appBar: {\n      top: \"auto\",\n      bottom: 0\n    },\n    toolBar: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }\n  });\n\n/**\n * @typeparam <typeof styles>\n */\ninterface Props extends WithStyles<typeof styles> {\n  buttons: JSX.Element[];\n}\n\n/**\n * The [[Footer]] functional component sits at the bottom of the application.\n * @param props used to pass in stylings\n * @returns React Element; the component footer\n */\nconst Footer: React.FC<Props> = props => {\n  const { buttons, classes } = props;\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          {buttons.map((button: JSX.Element, index: number) => (\n            <React.Fragment key={index}>{button}</React.Fragment>\n          ))}\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Footer);\n","/**\n * Entity Names:\n *\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Mar 9, 2020\n * Derived From:\n *  material-ui\n *\n * Modal component for sending manual commands to blinds\n */\nimport React, { useState } from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Modal,\n  Button,\n  FormControl,\n  TextField,\n} from \"@material-ui/core\";\n// import { BLIND_MODE } from \"../../../res/blindTypes\";\nimport Blind from \"../../../res/Classes/Blind\";\nimport { ICredentials } from \"../../../res/Interfaces\";\nimport config from \"../../../config\";\n\n/**\n * 'styles' allows for styling within typscript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0),\n    },\n    modalDiv: {\n      position: \"absolute\",\n      width: \"90%\",\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid\",\n      borderRadius: \"4px\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      midWidth: 120,\n      maxWidth: 120,\n    },\n    inputs: {\n      display: \"flex\",\n      justifyContent: \"left\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n    },\n    slider: {\n      width: \"20%\",\n    },\n  });\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n/**\n * @typeparam <typeof styles>\n * @param stats stats to display\n */\ninterface Props extends WithStyles<typeof styles> {\n  addBlind: (blind: Blind) => void;\n  open: boolean;\n  handleClose: () => void;\n}\n\n/**\n * The [[StatusPaper]] functional component provides stats in a compact display\n * @param props used to pass in stylings\n * @returns React Element; A material-ui 'paper' component displaying stats\n */\nconst AddModal: React.FC<Props> = (props) => {\n  const { classes, open, handleClose, addBlind } = props;\n  const [modalStyle] = useState(getModalStyle);\n  const [name, setName] = useState<string>(\"blinds\");\n  const [creds, setCreds] = useState<ICredentials>(\n    config.defaultObjects.credentials\n  );\n\n  const handleName = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setName(event.target.value as string);\n  };\n\n  const handlePassword = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCreds({\n      address: creds.address,\n      password: event.target.value as string,\n    });\n  };\n\n  const handleAddress = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCreds({\n      address: event.target.value as string,\n      password: creds.password,\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Modal open={open} onClose={handleClose}>\n        <div\n          style={modalStyle}\n          className={classes.modalDiv}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <h2 id=\"simple-modal-title\">New Connection</h2>\n          <p id=\"simple-modal-description\">Add Smart Blinds</p>\n          <div className={classes.inputs}>\n            <FormControl className={classes.formControl}>\n              <TextField\n                required\n                onChange={handleName}\n                id=\"standard-required\"\n                label=\"Name\"\n                defaultValue={name}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <TextField\n                onChange={handleAddress}\n                required\n                id=\"standard-required\"\n                label=\"IP\"\n                defaultValue={creds.address}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <TextField\n                onChange={handlePassword}\n                id=\"standard-password-input\"\n                required\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </FormControl>\n\n            <Button\n              onClick={() => {\n                addBlind(new Blind(name, creds));\n                handleClose();\n              }}\n            >\n              Add Blinds\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(AddModal);\n","/**\n * Entity Names:\n *  Splash\n *  props\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  N/A\n *\n * Splash page for heads-up stats and access to more of the application\n */\nimport React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  ListItemIcon,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport config from \"../../../config\";\nimport StatusPaper from \"../../../Components/Molecules/StatusPaper\";\nimport Footer from \"../../../Components/Atoms/Footer\";\nimport AddModal from \"../../Molecules/AddModal\";\nimport { IStats } from \"../../../res/Interfaces\";\nimport Blind from \"../../../res/Classes/Blind\";\nimport { useState, useEffect } from \"react\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0),\n    },\n    title: {\n      flexGrow: 1,\n      padding: theme.spacing(2),\n    },\n    list: {\n      padding: theme.spacing(0),\n    },\n  });\n/**\n * @typeparam <typeof styles>\n * @param stats stats to display, passed down to [[StatusPaper]]\n * @param blindList list of blind objects to display\n */\ninterface Props extends WithStyles<typeof styles> {\n  blindList: Blind[];\n  switchBlind: (blind: Blind) => void;\n  addBlind: (blind: Blind) => void;\n  removeBlind: (idx: number) => void;\n}\n\n/**\n * The [[Splash]] functional component acts as the\n * primary landing page for the application.\n * @param props used to pass in stylings\n * @returns React Element; the Splash page\n */\nconst Splash: React.FC<Props> = (props) => {\n  const { blindList, switchBlind, classes, addBlind } = props;\n\n  let defaultStats = config.defaultObjects.stats;\n  // temporary until the webserver is configured\n  const [currentStats, setStats] = useState(defaultStats);\n\n  // set timer to update blinds every 5 seconds\n  useEffect(() => {\n    blindList[0].getStatus().then((statusResponse: IStats) => {\n      setStats(statusResponse);\n    });\n  }, [blindList]);\n\n  const [modalOpen, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <StatusPaper stats={currentStats} />\n      <Divider />\n      <List className={classes.list}>\n        {blindList.map((blind: Blind) => (\n          <React.Fragment key={blind.getAddress() + blind.getName()}>\n            <Paper>\n              <ListItem\n                button\n                onClick={() => {\n                  switchBlind(blind);\n                }}\n                component={Link}\n                to={config.root + \"/blind\"}\n              >\n                <ListItemIcon>\n                  <ArrowRightIcon />\n                </ListItemIcon>\n                <ListItemText primary={blind.getName()} />\n              </ListItem>\n            </Paper>\n            <Divider />\n          </React.Fragment>\n        ))}\n      </List>\n      <AddModal\n        open={modalOpen}\n        handleClose={handleClose}\n        addBlind={addBlind}\n      ></AddModal>\n      <Footer\n        buttons={[\n          <Button onClick={handleOpen} color=\"inherit\">\n            Add a Smart Blind\n          </Button>,\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Splash);\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nconst ViewSchedules: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Button variant=\"contained\" color=\"primary\">\n        Hello World\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default ViewSchedules;\n","/**\n * Entity Names:\n *\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Mar 9, 2020\n * Derived From:\n *  material-ui\n *\n * Modal component for sending manual commands to blinds\n */\nimport React, { useState } from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Modal,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Slider,\n  Typography,\n} from \"@material-ui/core\";\nimport { BLIND_MODE } from \"../../../res/blindTypes\";\n\n/**\n * 'styles' allows for styling within typscript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0),\n    },\n    modalDiv: {\n      position: \"absolute\",\n      width: \"90%\",\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid\",\n      borderRadius: \"4px\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      midWidth: 120,\n    },\n    inputs: {\n      display: \"flex\",\n      justifyContent: \"left\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n    },\n    slider: {\n      width: \"20%\",\n    },\n  });\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n/**\n * @typeparam <typeof styles>\n * @param stats stats to display\n */\ninterface Props extends WithStyles<typeof styles> {\n  sendCommand: (mode: BLIND_MODE, duration: number, amount?: number) => void;\n  open: boolean;\n  handleClose: () => void;\n}\n\n/**\n * The [[StatusPaper]] functional component provides stats in a compact display\n * @param props used to pass in stylings\n * @returns React Element; A material-ui 'paper' component displaying stats\n */\nconst CommandModal: React.FC<Props> = (props) => {\n  const { classes, open, handleClose, sendCommand } = props;\n  const [modalStyle] = useState(getModalStyle);\n  const [duration, setDuration] = useState(30);\n  const [mode, setMode] = useState<BLIND_MODE>(\"ECO\");\n  const [angle, setAngle] = useState(0);\n\n  const handleDuration = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDuration(event.target.value as number);\n  };\n  const handleMode = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setMode(event.target.value as BLIND_MODE);\n  };\n  const handleAngle = (\n    event: React.ChangeEvent<{}>,\n    value: number | number[]\n  ) => {\n    if (Array.isArray(value)) {\n      return;\n    }\n    setAngle(value);\n  };\n  return (\n    <React.Fragment>\n      <Modal open={open} onClose={handleClose}>\n        <div\n          style={modalStyle}\n          className={classes.modalDiv}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <h2 id=\"simple-modal-title\">Manual Control</h2>\n          <p id=\"simple-modal-description\">Control the blinds directly</p>\n          <div className={classes.inputs}>\n            <FormControl className={classes.formControl}>\n              <InputLabel>Duration</InputLabel>\n              <Select value={duration} onChange={handleDuration}>\n                <MenuItem value={30}>30 Mins</MenuItem>\n                <MenuItem value={60}>1 Hour</MenuItem>\n                <MenuItem value={240}>4 Hours</MenuItem>\n                <MenuItem value={0}>Today</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel>Mode</InputLabel>\n              <Select value={mode} onChange={handleMode}>\n                <MenuItem value={\"ECO\"}>Eco</MenuItem>\n                <MenuItem value={\"BALANCED\"}>Balanced (Auto)</MenuItem>\n                <MenuItem value={\"LIGHT\"}>Light</MenuItem>\n                <MenuItem value={\"DARK\"}>Dark</MenuItem>\n                <MenuItem value={\"MANUAL\"}>Other</MenuItem>\n              </Select>\n            </FormControl>\n            {mode === \"MANUAL\" ? (\n              <Slider\n                className={classes.slider + \" \" + classes.formControl}\n                min={-100}\n                max={100}\n                step={10}\n                value={angle}\n                onChange={handleAngle}\n                aria-labelledby=\"continuous-slider\"\n              ></Slider>\n            ) : (\n              \"\"\n            )}\n            {mode === \"MANUAL\" ? (\n              <Typography className={classes.formControl}>\n                {angle + \"°\"}\n              </Typography>\n            ) : (\n              \"\"\n            )}\n            <Button\n              onClick={() => {\n                sendCommand(mode, duration, angle);\n                handleClose();\n              }}\n            >\n              Send\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommandModal);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n} from \"@material-ui/core\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport BorderAllIcon from \"@material-ui/icons/BorderAll\";\nimport FormatAlignJustifyIcon from \"@material-ui/icons/FormatAlignJustify\";\nimport Blind from \"../../../res/Classes/Blind\";\nimport { Link } from \"react-router-dom\";\n// import { IStats } from \"../../../res/Interfaces\";\nimport config from \"../../../config\";\nimport Footer from \"../../Atoms/Footer\";\nimport CommandModal from \"../../Molecules/CommandModal\";\nimport { BLIND_MODE } from \"../../../res/blindTypes\";\nimport { IStats } from \"../../../res/Interfaces\";\n\nconst LOADING_MESSAGE = \"loading...\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0),\n    },\n    title: {\n      flexGrow: 1,\n      padding: theme.spacing(2),\n    },\n    list: {\n      padding: theme.spacing(0),\n    },\n  });\n/**\n * @typeparam <typeof styles>\n * @param blind the blind in question\n */\ninterface Props extends WithStyles<typeof styles> {\n  blind: Blind;\n}\n\n/**\n * The [[BlindMenu]] functional component acts as the\n * primary landing page for the application.\n * @param props used to pass in stylings and the blind object\n * @returns React Element; the BlindMenu component\n */\nconst BlindMenu: React.FC<Props> = (props) => {\n  const { classes, blind } = props;\n  const [stats, setStats] = useState<IStats>(config.defaultObjects.stats);\n  // const [schedule, setSchedule] = useState<ISchedule>(\n  //   config.defaultObjects.schedule\n  // );\n  // const [blindMode, setblindMode] = useState(config.defaultObjects.blindMode);\n\n  const [modalOpen, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function updateValues(blind: Blind) {\n    // blind.getSchedule().then((scheduleResponse) => {\n    //   // setSchedule(scheduleResponse);\n    //   setblindMode(blind.GetCurrentBehavior(scheduleResponse));\n    // });\n    blind.getStatus().then((statsResponse) => {\n      setStats(statsResponse);\n    });\n  }\n\n  useEffect(() => {\n    if (blind === undefined) {\n      return;\n    }\n    updateValues(blind);\n  }, [blind]);\n\n  const sendCommand = (\n    mode: BLIND_MODE,\n    duration: number,\n    position?: number\n  ) => {\n    let setPosition: number = 0;\n\n    if (position !== undefined) {\n      setPosition = position;\n    }\n    let callback = (response: any) => {\n      updateValues(blind);\n    };\n    blind.sendCommand(\n      {\n        mode: mode,\n        duration: duration,\n        position: setPosition,\n      },\n      callback\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography className={classes.title} color=\"textPrimary\">\n          Current Status:\n        </Typography>\n        <List className={classes.root}></List>\n        <ListItem>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Indoor Temperature\"\n            primary={\n              stats === undefined\n                ? LOADING_MESSAGE\n                : `${Number(stats.indoorTemp).toFixed(2)}°`\n            }\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            {stats === undefined ? (\n              <AutorenewIcon />\n            ) : stats.motorPosition > config.MOTORMIDPOINT ? (\n              <BorderAllIcon />\n            ) : (\n              <FormatAlignJustifyIcon />\n            )}\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Motor Position\"\n            primary={\n              stats === undefined\n                ? LOADING_MESSAGE\n                : `${Number(stats.motorPosition).toFixed(2)}°`\n            } //convert\n          />\n        </ListItem>\n\n        <ListItem>\n          <ListItemIcon>\n            {stats === undefined ? (\n              <AutorenewIcon />\n            ) : stats.mode === \"DARK\" ? (\n              <Brightness3Icon />\n            ) : stats.mode === \"LIGHT\" ? (\n              <Brightness5Icon />\n            ) : (\n              <EcoIcon />\n            )}\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Behavior\"\n            primary={stats === undefined ? LOADING_MESSAGE : stats.mode} //convert\n          />\n        </ListItem>\n      </Paper>\n      <Footer\n        buttons={[\n          <Button onClick={handleOpen} color=\"inherit\">\n            Manual Control\n          </Button>,\n          <Button\n            component={Link}\n            to={config.root + \"/blind/createschedule\"}\n            color=\"inherit\"\n          >\n            Set Schedule\n          </Button>,\n        ]}\n      />\n      <CommandModal\n        open={modalOpen}\n        handleClose={handleClose}\n        sendCommand={sendCommand}\n      ></CommandModal>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(BlindMenu);\n","/**\n * Entity Names:\n *  CreateSchedule\n *  props\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 18, 2020\n * Derived From:\n *  React-datasheet\n *\n * Schedule builder UI\n */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Paper,\n  Button,\n  Typography,\n  FormControl,\n  Select,\n  MenuItem,\n  Slider,\n} from \"@material-ui/core\";\n\nimport Blind from \"../../../res/Classes/Blind\";\nimport { Link } from \"react-router-dom\";\nimport config from \"../../../config\";\nimport Footer from \"../../Atoms/Footer\";\nimport { daysList, BLIND_MODE } from \"../../../res/blindTypes\";\nimport { ISchedule, ITimeSlot, IBlindMode } from \"../../../res/Interfaces\";\nimport ReactDataSheet from \"react-datasheet\";\nimport \"react-datasheet/lib/react-datasheet.css\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0),\n    },\n    weekWrapper: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(8, minmax(25px, 1fr))\",\n      gridTemplateRows: \"1fr\",\n      gridAutoFlow: \"dense\",\n      justifyItems: \"stretch\",\n      alignItems: \"stretch\",\n      margin: theme.spacing(1),\n    },\n    timeSlotWrapper: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"scroll\",\n      height: \"70vh\",\n    },\n    dayHeader: {\n      textAlign: \"center\",\n    },\n    tableRow: {\n      height: theme.spacing(6),\n      textAlign: \"center\",\n      alignItems: \"center\",\n      padding: \"0px\",\n      // display: \"grid\"\n    },\n    timeTable: {\n      // height: theme.spacing(6),\n      borderBottomColor: \"rgb(139, 195, 74)\", //same here\n      tableLayout: \"fixed\",\n      borderSpacing: \"0px\",\n      width: \"calc(100% - 8px)\",\n      minWidth: theme.spacing(3),\n      margin: theme.spacing(1),\n    },\n    fitTables: {\n      width: \"12.5%\",\n    },\n    ecoClass: {\n      verticalAlign: \"middle !important\",\n      background: `${theme.palette.primary.dark} !important`,\n      color: `${theme.palette.grey[50]} !important`,\n    },\n    lightClass: {\n      verticalAlign: \"middle !important\",\n      background: `${theme.palette.info.light} !important`,\n      color: `${theme.palette.grey[800]} !important`,\n    },\n    darkClass: {\n      verticalAlign: \"middle !important\",\n      background: `${theme.palette.grey[600]} !important`,\n      color: `${theme.palette.grey[50]} !important`,\n    },\n    manualClass: {\n      verticalAlign: \"middle !important\",\n      background: `${theme.palette.secondary.light} !important`,\n      color: `${theme.palette.grey[800]} !important`,\n    },\n    balancedClass: {\n      verticalAlign: \"middle !important\",\n      background: `${theme.palette.primary.light} !important`,\n      color: `${theme.palette.grey[800]} !important`,\n    },\n    typeSelect: {\n      // position: \"fixed\",\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      alignItems: \"center\",\n      width: \"100%\",\n      position: \"absolute\",\n      bottom: \"60px\",\n    },\n    slider: {\n      width: \"20%\",\n    },\n  });\n\ninterface GridElement extends ReactDataSheet.Cell<GridElement, number> {\n  value: string | null;\n}\n\ninterface TimeGrid extends GridElement {\n  mode: IBlindMode;\n}\n\nclass CalendarSheet extends ReactDataSheet<GridElement, number> {}\n\n/**\n * @typeparam <typeof styles>\n * @param blind the blind in question\n */\ninterface Props extends WithStyles<typeof styles> {\n  blind: Blind;\n}\n\n/**\n * The [[CreateSchedule]] functional component acts as the\n * UI for creating and setting schedules\n * @param props used to pass in stylings and the blind object\n * @returns React Element; the BlindMenu component\n */\nconst CreateSchedule: React.FC<Props> = (props) => {\n  const { classes, blind } = props;\n  const [schedule, setSchedule] = useState(\n    JSON.parse(JSON.stringify(config.defaultObjects.schedule))\n  );\n\n  let mapTimeToIndex = (time: Date) => {\n    let index = 0;\n    index += time.getHours() * 4;\n    index += Math.ceil(time.getMinutes() / 15);\n    return index;\n  };\n\n  const modeClasses: { [mode: string]: string } = {\n    ECO: classes.ecoClass,\n    LIGHT: classes.lightClass,\n    DARK: classes.darkClass,\n    MANUAL: classes.manualClass,\n    BALANCED: classes.balancedClass,\n  };\n\n  const modeNames: { [mode: string]: string } = {\n    ECO: \"Eco\",\n    LIGHT: \"Light\",\n    DARK: \"Dark\",\n    MANUAL: \"Set\",\n    BALANCED: \"Auto\",\n  };\n\n  let gridFromSchedule = (schedule: ISchedule) => {\n    console.log(\"newSChed\", schedule);\n    let grid: TimeGrid[][] = [];\n    for (let day = 0; day < 7; day++) {\n      let dayName = daysList[day];\n\n      for (let time = 0; time < 24 * 4; time++) {\n        if (grid[time] === undefined) {\n          grid[time] = [];\n        }\n        grid[time].push({\n          value: modeNames[schedule.defaultMode.type],\n          mode: schedule.defaultMode,\n          className: modeClasses[schedule.defaultMode.type],\n          readOnly: true,\n        });\n      }\n\n      schedule[dayName].forEach((timeSlot: ITimeSlot) => {\n        const startIdx = mapTimeToIndex(timeSlot.start);\n        const endIdx = mapTimeToIndex(timeSlot.end);\n        for (let idx = startIdx; idx < endIdx; idx++) {\n          grid[idx][day].value = modeNames[timeSlot.mode.type];\n          grid[idx][day].mode = timeSlot.mode;\n          grid[idx][day].className = modeClasses[timeSlot.mode.type];\n        }\n      });\n    }\n    return grid;\n  };\n\n  let scheduleFromGrid = (grid: TimeGrid[][]) => {\n    let newSchedule: ISchedule = JSON.parse(\n      JSON.stringify(config.defaultObjects.schedule)\n    );\n    console.log(\"start\", newSchedule);\n    newSchedule.defaultMode = mode;\n    let hoursFromIdx = (idx: number) => {\n      return padNumber(Math.floor(idx / 4));\n    };\n    let minsFromIdx = (idx: number) => {\n      return padNumber((idx % 4) * 15);\n    };\n    let padNumber = (val: number) => {\n      let str = String(val);\n      while (str.length < 2) {\n        str = \"0\" + str;\n      }\n      return str;\n    };\n    for (let idx = 0; idx < grid.length; idx++) {\n      for (let day = 0; day < grid[idx].length; day++) {\n        let block = grid[idx];\n        let endDate = new Date(\n          `2020-01-01T${hoursFromIdx(idx + 1)}:${minsFromIdx(idx + 1)}:00`\n        );\n        if (endDate.getMinutes() === 0 && endDate.getHours() === 0) {\n          endDate.setHours(23);\n          endDate.setMinutes(59);\n        }\n        newSchedule[daysList[day]].push({\n          start: new Date(\n            `2020-01-01T${hoursFromIdx(idx)}:${minsFromIdx(idx)}:00`\n          ),\n          end: endDate,\n          mode: block[day].mode,\n        });\n      }\n    }\n    console.log(\"end\", newSchedule);\n    return newSchedule;\n  };\n\n  const [grid, setGrid] = useState(gridFromSchedule(schedule));\n  const [mode, setMode] = useState<IBlindMode>(config.defaultObjects.blindMode);\n  const [percentage, setPercentage] = useState(\n    mode.percentage ? mode.percentage : 0\n  );\n  const [selection, setSelection] = useState<ReactDataSheet.Selection>({\n    start: { i: 0, j: 0 },\n    end: { i: 0, j: 0 },\n  });\n\n  // blind.getSchedule().then((scheduleResponse) => {\n  //   setSchedule(scheduleResponse);\n  // });\n\n  useEffect(() => {\n    if (blind === undefined) {\n      return;\n    }\n    blind.getSchedule().then((scheduleResponse) => {\n      setSchedule(scheduleResponse);\n    });\n  }, [blind]);\n\n  useEffect(() => {\n    if (schedule === undefined) {\n      return;\n    }\n\n    setGrid(gridFromSchedule(schedule));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [schedule]);\n\n  let saveSchedule = () => {\n    let newSchedule: ISchedule = scheduleFromGrid(grid);\n    console.log(\"New\", newSchedule);\n    console.log(\"from\", grid);\n    setSchedule(newSchedule);\n    blind.setSchedule(newSchedule);\n  };\n\n  let discardSchedule = () => {\n    setGrid(gridFromSchedule(schedule));\n  };\n\n  let dayTitle = (day: string) => day[0].toLocaleUpperCase() + day.slice(1, 3);\n  var weekDays = [\"Time\", ...daysList.map((day: string) => dayTitle(day))].map(\n    (title: string, i: number) => (\n      <Typography key={title} className={classes.dayHeader}>\n        {title}\n      </Typography>\n    )\n  );\n\n  let timeLegend: GridElement[][] = [];\n  for (let i = 0; i < 24 * 4; i++) {\n    let hour: number = Math.floor(i / 4);\n    let period: string = hour > 11 ? \"PM\" : \"AM\";\n    if (period === \"PM\" && hour !== 12) {\n      hour -= 12;\n    } else if (hour === 0) {\n      hour += 12;\n    }\n    let minute: number = (i % 4) * 15;\n\n    let timeString: string = `${hour}:${\n      minute === 0 ? \"00\" : minute\n    } ${period} `;\n    if (timeLegend[i] === undefined) {\n      timeLegend[i] = [];\n    }\n    timeLegend[i].push({ value: timeString });\n  }\n\n  let applySelection = () => {\n    const tempgrid = grid.map((row) => [...row]);\n    for (let i = selection.start.i; i <= selection.end.i; i++) {\n      for (let j = selection.start.j; j <= selection.end.j; j++) {\n        tempgrid[i][j].value = modeNames[mode.type];\n        tempgrid[i][j].mode = mode;\n        tempgrid[i][j].className = modeClasses[mode.type];\n      }\n    }\n    setGrid(tempgrid);\n  };\n\n  var calendarGrid = (\n    <CalendarSheet\n      data={grid}\n      valueRenderer={(cell) => cell.value}\n      className={classes.timeTable}\n      rowRenderer={(props) => (\n        <tr className={classes.tableRow}>{props.children}</tr>\n      )}\n      onSelect={(selection: ReactDataSheet.Selection) => {\n        setSelection(selection);\n      }}\n    ></CalendarSheet>\n  );\n\n  var calendarLegend = (\n    <CalendarSheet\n      data={timeLegend}\n      valueRenderer={(cell) => cell.value}\n      sheetRenderer={(props) => (\n        <table className={classes.timeTable}>\n          <tbody>{props.children}</tbody>\n        </table>\n      )}\n      rowRenderer={(props) => (\n        <tr className={classes.tableRow}>{props.children}</tr>\n      )}\n    ></CalendarSheet>\n  );\n\n  const handleMode = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setMode({ type: event.target.value as BLIND_MODE, percentage: percentage });\n  };\n  const handlePercentage = (\n    event: React.ChangeEvent<{}>,\n    value: number | number[]\n  ) => {\n    if (Array.isArray(value)) {\n      return;\n    }\n    setPercentage(value);\n  };\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <div className={classes.weekWrapper}>{weekDays}</div>\n        <div className={classes.timeSlotWrapper}>\n          <table>\n            <tbody>\n              <tr>\n                <td className={classes.fitTables}>{calendarLegend}</td>\n                <td>{calendarGrid}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <Paper className={classes.typeSelect}>\n          <Typography>Set Mode</Typography>\n          <FormControl>\n            {/* <InputLabel>Type</InputLabel> */}\n            <Select value={mode.type} onChange={handleMode}>\n              <MenuItem value={\"ECO\"}>Eco</MenuItem>\n              <MenuItem value={\"BALANCED\"}>Balanced (Auto)</MenuItem>\n              <MenuItem value={\"LIGHT\"}>Light</MenuItem>\n              <MenuItem value={\"DARK\"}>Dark</MenuItem>\n              <MenuItem value={\"MANUAL\"}>Custom</MenuItem>\n            </Select>\n          </FormControl>\n          {mode.type === \"MANUAL\" ? (\n            <Slider\n              className={classes.slider}\n              min={-100}\n              max={100}\n              step={10}\n              value={percentage}\n              onChange={handlePercentage}\n              aria-labelledby=\"continuous-slider\"\n            ></Slider>\n          ) : (\n            \"\"\n          )}\n          {mode.type === \"MANUAL\" ? (\n            <Typography>{percentage + \"°\"}</Typography>\n          ) : (\n            \"\"\n          )}\n\n          <Button\n            onClick={() => {\n              applySelection();\n            }}\n          >\n            Apply\n          </Button>\n        </Paper>\n      </Paper>\n      <Footer\n        buttons={[\n          <Button\n            onClick={() => {\n              saveSchedule();\n            }}\n            component={Link}\n            to={config.root + \"/blind\"}\n            color=\"inherit\"\n          >\n            Save\n          </Button>,\n          <Button\n            onClick={() => {\n              discardSchedule();\n            }}\n            component={Link}\n            to={config.root + \"/blind\"}\n            color=\"inherit\"\n          >\n            Cancel\n          </Button>,\n        ]}\n      />\n    </React.Fragment>\n  );\n};\n\n// function arrayFromSchedule(schedule: ISchedule) {}\n\n// function scheduleFromArray() {}\n\nexport default withStyles(styles)(CreateSchedule);\n","/**\n * Entity Names:\n *  App\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  create-react-app\n *\n * The App object acts as the root of the application.\n * All other components branch out in usage from this functional component.\n * 'styles' allows for styling within typescript code.\n *\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport config from \"../config\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { defaultTheme } from \"../res/styles/Themes\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Header from \"../Components/Atoms/Header\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  ThemeProvider\n} from \"@material-ui/core\";\nimport Splash from \"../Components/Pages/Splash\";\nimport ViewSchedules from \"../Components/Pages/ViewSchedules\";\nimport BlindMenu from \"../Components/Pages/BlindMenu\";\nimport Blind from \"../res/Classes/Blind\";\n// import { IStats } from \"../res/Interfaces\";\nimport CreateSchedule from \"../Components/Pages/CreateSchedule\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      margin: \"0\",\n      width: \"100vw\",\n      position: \"fixed\"\n    }\n  });\n\n/**\n * @typeparam <typeof styles>\n */\ninterface Props extends WithStyles<typeof styles> {}\n\n/**\n * The [[App]] functional component acts as the root of the application.\n * All other components branch out in usage from this component.\n * @param props used to pass in stylings\n * @returns React Element; the application\n */\nconst App = (props: Props) => {\n  const { classes } = props;\n\n  const testBlinds = config.testCases.blinds;\n\n  const [blinds, setBlinds] = useState<Blind[]>(testBlinds);\n  const [currentBlind, setBlind] = useState(blinds[0]);\n  const [title, setTitle] = useState(\"Smart Blinds\");\n\n  function switchBlind(blind: Blind) {\n    setBlind(blind);\n    setTitle(blind.getName());\n  }\n\n  function addBlind(blind: Blind) {\n    setBlinds([...blinds, blind]);\n  }\n\n  function removeBlind(idx: number) {\n    let blindsCopy: Blind[] = JSON.parse(JSON.stringify(blinds));\n    blindsCopy.splice(idx, 1);\n    setBlinds(blindsCopy);\n  }\n\n  var location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname === config.root + config.defaultPath) {\n      setTitle(config.mainTitle);\n    }\n  }, [location]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ThemeProvider theme={defaultTheme}>\n        <Header title={title} />\n        <Switch>\n          <Route\n            exact\n            path={config.root + \"/\"}\n            render={props => (\n              <Splash\n                {...props}\n                blindList={blinds}\n                switchBlind={switchBlind}\n                addBlind={addBlind}\n                removeBlind={removeBlind}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={config.root + \"/blind\"}\n            render={props => <BlindMenu {...props} blind={currentBlind} />}\n          />\n          <Route path={config.root + \"/schedules\"} component={ViewSchedules} />\n          <Route\n            exact\n            path={config.root + \"/blind/createSchedule\"}\n            render={props => <CreateSchedule {...props} blind={currentBlind} />}\n          />\n          <Redirect to={config.root + config.defaultPath} />\n        </Switch>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./res/styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}