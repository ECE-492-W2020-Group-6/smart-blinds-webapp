{"version":3,"sources":["res/Classes/BlindAPI/BlindAPI.ts","res/blindTypes.tsx","res/Classes/Blind/Blind.ts","config.ts","res/styles/Themes/themes.ts","Components/Atoms/Header/Header.tsx","Components/Molecules/StatusPaper/StatusPaper.tsx","Components/Pages/Splash/Splash.tsx","Components/Pages/ViewSchedules/ViewSchedules.tsx","Components/Atoms/Footer/Footer.tsx","Components/Molecules/CommandModal/CommandModal.tsx","Components/Pages/BlindMenu/BlindMenu.tsx","Components/Pages/CreateSchedule/CreateSchedule.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["BlindAPI","credentials","this","endpoint","method","body","requestInit","mode","headers","Auth","password","console","log","address","fetch","daysList","Blind","name","createFetch","response","clone","json","responseJSON","status","indoorTemp","temperature","outdoorTemp","cloudCoverage","motorPosition","schedule","now","Date","scheduleDay","getUTCDay","length","defaultMode","forEach","timeSlot","TimeslotIsActive","time","getTimeOfDay","date","getUTCHours","getUTCMinutes","getUTCSeconds","timeOfDay","start","end","config","testCases","schedules","promise","Promise","resolve","reject","setTimeout","JSON","stringify","command","defaultBlindMode","type","defaultSchedule","monday","tuesday","wednesday","thursday","friday","saturday","sunday","realTestBlind","root","defaultPath","mainTitle","MOTORMIDPOINT","stats","blinds","defaultObjects","blindMode","defaultTheme","createMuiTheme","palette","primary","lightGreen","secondary","lightBlue","withStyles","theme","createStyles","flexGrow","menuButton","marginRight","spacing","title","props","classes","Fragment","AppBar","position","Toolbar","IconButton","component","Link","to","edge","className","color","aria-label","Typography","variant","padding","Paper","List","ListItem","ListItemIcon","ListItemText","list","blindList","switchBlind","Divider","map","blind","key","getAddress","button","onClick","getName","ViewSchedules","Button","appBar","top","bottom","toolBar","display","justifyContent","buttons","index","getModalStyle","left","transform","modalDiv","width","backgroundColor","background","paper","border","borderRadius","boxShadow","shadows","formControl","margin","midWidth","inputs","open","handleClose","sendCommand","useState","modalStyle","duration","setDuration","Modal","onClose","style","aria-labelledby","aria-describedby","id","FormControl","InputLabel","Select","value","onChange","event","target","MenuItem","setStats","setSchedule","setblindMode","modalOpen","setOpen","useEffect","undefined","getSchedule","then","scheduleResponse","GetCurrentBehavior","getStatus","statsResponse","setPosition","weekWrapper","gridTemplateColumns","gridTemplateRows","gridAutoFlow","justifyItems","alignItems","timeSlotWrapper","flexWrap","overflow","height","dayHeader","textAlign","timeLegend","borderBottomColor","weekDays","day","toLocaleUpperCase","slice","dayTitle","i","hour","Math","floor","period","minute","timeString","push","emptySlot","emptyArray","scheduleArray","calendarGrid","GridList","cellHeight","cols","item","GridListTile","borderLeft","borderTop","borderBottom","Box","borderColor","makeSlotTile","testBlinds","defaultStats","currentBlind","setBlind","setTitle","currentStats","statusResponse","updateStats","location","useLocation","pathname","CssBaseline","ThemeProvider","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b8c882f.chunk.js","sourcesContent":["import { ICredentials } from \"../../Interfaces\";\n\ntype VALID_METHOD = \"GET\" | \"POST\";\nclass BlindAPI {\n  private credentials: ICredentials;\n\n  constructor(credentials: ICredentials) {\n    this.credentials = credentials;\n  }\n\n  async createFetch(\n    endpoint: string,\n    method: VALID_METHOD,\n    body?: any\n  ): Promise<Response> {\n    let requestInit: RequestInit = {};\n    switch (method) {\n      case \"GET\":\n        requestInit = {\n          method: method,\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"text/json\",\n            Auth: this.credentials.password\n          }\n          // body: body\n        };\n        break;\n      case \"POST\":\n        requestInit = {\n          method: method,\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Auth: this.credentials.password\n          },\n          body: body\n        };\n        break;\n    }\n    console.log(this.credentials.address + endpoint, requestInit);\n    return fetch(this.credentials.address + endpoint, requestInit);\n  }\n}\n\nexport default BlindAPI;\n","/**\n * Entity Names:\n *  DAY_OF_WEEK\n *  daysList\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Mar 3, 2020\n * Derived From:\n *  N/A\n *\n * Type declarations and utilities\n */\n\nexport type BLIND_MODE = \"ECO\" | \"LIGHT\" | \"DARK\" | \"CUSTOM\";\nexport type DAY_OF_WEEK =\n  | \"sunday\"\n  | \"monday\"\n  | \"tuesday\"\n  | \"wednesday\"\n  | \"thursday\"\n  | \"friday\"\n  | \"saturday\";\n\nexport const daysList: DAY_OF_WEEK[] = [\n  \"sunday\",\n  \"monday\",\n  \"tuesday\",\n  \"wednesday\",\n  \"thursday\",\n  \"friday\",\n  \"saturday\"\n];\n","/**\n * Entity Names:\n *  Blind\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  N/A\n *\n * Object that abstracts blind actions to the rest of the application\n */\nimport BlindAPI from \"../BlindAPI\";\nimport {\n  ICredentials,\n  IStats,\n  ISchedule,\n  IBlindMode,\n  ITimeSlot,\n  IBlindCommand\n} from \"../../Interfaces\";\nimport config from \"../../../config\";\nimport { daysList } from \"../../blindTypes\";\n\n/**\n * Abstracts Smart Blind operation\n */\nclass Blind {\n  private name: string;\n  private BlindAPI: BlindAPI;\n  private address: string;\n  /**\n   * @param name Name of blind device\n   * @param credentials credential object for access and authentication\n   */\n  constructor(name: string, credentials: ICredentials) {\n    this.BlindAPI = new BlindAPI(credentials);\n    this.name = name;\n    this.address = credentials.address;\n  }\n\n  /**\n   * @returns a promise that resolves to an [[IStats]] object\n   */\n  async getStatus(): Promise<IStats> {\n    let response = await this.BlindAPI.createFetch(\"/temp\", \"GET\");\n    let responseJSON = await response.clone().json();\n    // let status: IStats = responseJSON.status;\n    let status = {\n      // temp\n      indoorTemp: responseJSON.temperature,\n      outdoorTemp: -23,\n      cloudCoverage: \"High\",\n      motorPosition: 50\n    };\n\n    // const promise = new Promise<IStats>((resolve, reject) => {\n    //   setTimeout(() => {\n    //     resolve(status);\n    //   }, 500);\n    // });\n    return status;\n  }\n\n  /**\n   * @returns current behavior mode\n   */\n  GetCurrentBehavior(schedule: ISchedule): IBlindMode {\n    let now: Date = new Date();\n    let scheduleDay: ITimeSlot[] = schedule[daysList[now.getUTCDay()]];\n    if (scheduleDay.length === 0) {\n      return schedule.defaultMode;\n    }\n    scheduleDay.forEach((timeSlot: ITimeSlot) => {\n      if (this.TimeslotIsActive(timeSlot, now)) {\n        return timeSlot.mode;\n      }\n    });\n    return schedule.defaultMode;\n  }\n\n  /**\n   * @returns if specified time is in the specified time slot\n   */\n  TimeslotIsActive(timeSlot: ITimeSlot, time: Date): boolean {\n    function getTimeOfDay(date: Date) {\n      return `${date.getUTCHours}${date.getUTCMinutes}${date.getUTCSeconds}`;\n    }\n    let timeOfDay: string = getTimeOfDay(time);\n    if (\n      timeOfDay >= getTimeOfDay(timeSlot.start) &&\n      timeOfDay < getTimeOfDay(timeSlot.end)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @returns a promise that resolves to an [[ISchedule]] object\n   */\n  async getSchedule(): Promise<ISchedule> {\n    // let response = await this.BlindAPI.createFetch(\"Status\");\n    // let responseJSON = await response.clone().json();\n    // let schedule: ISchedule = responseJSON.status;\n\n    var schedule = config.testCases.schedules[0];\n    const promise = new Promise<ISchedule>((resolve, reject) => {\n      setTimeout(() => {\n        resolve(schedule);\n      }, 500);\n    });\n\n    return promise;\n  }\n\n  /**\n   * @param schedule sends or configures a new schedule to a device\n   */\n  async setSchedule(schedule: ISchedule) {\n    this.BlindAPI.createFetch(\"/schedule\", \"POST\", JSON.stringify(schedule));\n    // let responseJSON = await response.clone().json();\n  }\n\n  /**\n   * @param command sends a new command to the device\n   */\n  async sendCommand(command: IBlindCommand) {\n    let response = await this.BlindAPI.createFetch(\n      \"/command\",\n      \"POST\",\n      JSON.stringify(command)\n    );\n    let responseJSON = await response.clone().json();\n    console.log(responseJSON);\n  }\n\n  /**\n   * @returns name of the blind\n   */\n  getName(): string {\n    return this.name;\n  }\n\n  /**\n   * @param name sets a new name for the blind\n   */\n  setName(name: string) {\n    this.name = name;\n  }\n\n  /**\n   * @returns IP address of blind device\n   */\n  getAddress(): string {\n    return this.address;\n  }\n}\n\nexport default Blind;\n","import { ISchedule, IStats, IBlindMode } from \"./res/Interfaces\";\nimport Blind from \"../src/res/Classes/Blind\";\n\nconst defaultBlindMode: IBlindMode = {\n  type: \"ECO\"\n};\n\nconst defaultSchedule: ISchedule = {\n  defaultMode: defaultBlindMode,\n  monday: [],\n  tuesday: [],\n  wednesday: [],\n  thursday: [],\n  friday: [],\n  saturday: [],\n  sunday: []\n};\nlet realTestBlind: Blind = new Blind(\"Physical Test\", {\n  address: \"http://10.147.17.181:5000/api/v1\",\n  password: \"\"\n});\n\nlet localServerBlind: Blind = new Blind(\"Local Test\", {\n  address: \"http://127.0.0.1:5000/api/v1\",\n  password: \"\"\n});\n\nlet testBlind: Blind = new Blind(\"Test Blinds\", {\n  address: \"localhost\",\n  password: \"123pass\"\n});\nlet otherBlind: Blind = new Blind(\"Other blinds\", {\n  address: \"1.255.02.3\",\n  password: \"pass123\"\n});\nconst sampleStats: IStats = {\n  indoorTemp: 21,\n  outdoorTemp: 20,\n  cloudCoverage: \"Low\",\n  motorPosition: 0\n};\n\nconst defaultStats: IStats = {\n  indoorTemp: 0,\n  outdoorTemp: 0,\n  cloudCoverage: \"Low\",\n  motorPosition: 0\n};\n\ninterface IConfig {\n  root: string;\n  defaultPath: string;\n  mainTitle: string;\n  MOTORMIDPOINT: number;\n  testCases: {\n    schedules: ISchedule[];\n    stats: IStats[];\n    blinds: Blind[];\n  };\n  defaultObjects: {\n    schedule: ISchedule;\n    blindMode: IBlindMode;\n    stats: IStats;\n  };\n}\n\nconst config: IConfig = {\n  root: \"/smart-blinds-webapp\",\n  defaultPath: \"/\",\n  mainTitle: \"Smart Blinds\",\n  MOTORMIDPOINT: 50,\n  testCases: {\n    schedules: [defaultSchedule],\n    stats: [sampleStats],\n    blinds: [localServerBlind, realTestBlind, testBlind, otherBlind]\n  },\n  defaultObjects: {\n    schedule: defaultSchedule,\n    blindMode: defaultBlindMode,\n    stats: defaultStats\n  }\n};\n\nexport default config;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n// import purple from \"@material-ui/core/colors/purple\";\n// import common from \"@material-ui/core/colors/common\";\n// import blueGrey from \"@material-ui/core/colors/blueGrey\";\n// import blue from \"@material-ui/core/colors/blue\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\n// import grey from \"@material-ui/core/colors/grey\";\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\n\nexport const defaultTheme = createMuiTheme({\n  palette: {\n    primary: lightGreen,\n    secondary: lightBlue\n  }\n});\n","/**\n * Entity Names:\n *  Header\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  create-react-app\n *\n * The Header functional component sits at the top of the application.\n *\n */\nimport React from \"react\";\nimport config from \"../../../config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Toolbar,\n  IconButton,\n  AppBar,\n  Typography\n} from \"@material-ui/core\";\n// import HomeIcon from \"@material-ui/icons/Home\";\nimport LineWeightIcon from \"@material-ui/icons/LineWeight\";\n\n/**\n * 'styles' allows for styling within typscript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    }\n  });\n\n/**\n * @typeparam <typeof styles>\n * @param title title to display in the header\n */\ninterface Props extends WithStyles<typeof styles> {\n  title: string;\n}\n\n/**\n * The [[Header]] functional component sits at the top of the application.\n * @param props used to pass in stylings\n * @returns React Element; the application header\n */\nconst Header: React.FC<Props> = props => {\n  const { classes, title } = props;\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            component={Link}\n            to={config.root + \"/\"}\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <LineWeightIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","/**\n * Entity Names:\n *  StatusPaper\n *  props\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  material-ui\n *\n * Sub component that provides received stats in a compact display.\n * Based on a material-ui 'Paper' component\n */\nimport React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from \"@material-ui/core\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport CloudIcon from \"@material-ui/icons/Cloud\";\nimport { IStats } from \"../../../res/Interfaces\";\n\n/**\n * 'styles' allows for styling within typscript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0)\n    },\n    title: {\n      flexGrow: 1,\n      padding: theme.spacing(2)\n    }\n  });\n\n/**\n * @typeparam <typeof styles>\n * @param stats stats to display\n */\ninterface Props extends WithStyles<typeof styles> {\n  stats: IStats;\n}\n\n/**\n * The [[StatusPaper]] functional component provides stats in a compact display\n * @param props used to pass in stylings\n * @returns React Element; A material-ui 'paper' component displaying stats\n */\nconst StatusPaper: React.FC<Props> = props => {\n  const { classes, stats } = props;\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography className={classes.title} color=\"textPrimary\">\n          Current Status:\n        </Typography>\n        <List className={classes.root}></List>\n        <ListItem>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Indoor Temperature\"\n            primary={`${stats.indoorTemp}°`}\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            {stats.outdoorTemp < 5 ? <AcUnitIcon /> : <WbSunnyIcon />}\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Outdoor Temperature\"\n            primary={`${stats.outdoorTemp}°`}\n          />\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <CloudIcon />\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Cloud Coverage\"\n            primary={stats.cloudCoverage}\n          />\n        </ListItem>\n      </Paper>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(StatusPaper);\n","/**\n * Entity Names:\n *  Splash\n *  props\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  N/A\n *\n * Splash page for heads-up stats and access to more of the application\n */\nimport React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  ListItemIcon,\n  Paper\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport config from \"../../../config\";\nimport StatusPaper from \"../../../Components/Molecules/StatusPaper\";\nimport { IStats } from \"../../../res/Interfaces\";\nimport Blind from \"../../../res/Classes/Blind\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0)\n    },\n    title: {\n      flexGrow: 1,\n      padding: theme.spacing(2)\n    },\n    list: {\n      padding: theme.spacing(0)\n    }\n  });\n/**\n * @typeparam <typeof styles>\n * @param stats stats to display, passed down to [[StatusPaper]]\n * @param blindList list of blind objects to display\n */\ninterface Props extends WithStyles<typeof styles> {\n  stats: IStats;\n  blindList: Blind[];\n  switchBlind: (blind: Blind) => void;\n}\n\n/**\n * The [[Splash]] functional component acts as the\n * primary landing page for the application.\n * @param props used to pass in stylings\n * @returns React Element; the Splash page\n */\nconst Splash: React.FC<Props> = props => {\n  const { stats, blindList, switchBlind, classes } = props;\n  return (\n    <div className={classes.root}>\n      <StatusPaper stats={stats} />\n      <Divider />\n      <List className={classes.list}>\n        {blindList.map((blind: Blind) => (\n          <React.Fragment key={blind.getAddress()}>\n            <Paper>\n              <ListItem\n                button\n                onClick={() => {\n                  switchBlind(blind);\n                }}\n                component={Link}\n                to={config.root + \"/blind\"}\n              >\n                <ListItemIcon>\n                  <ArrowRightIcon />\n                </ListItemIcon>\n                <ListItemText primary={blind.getName()} />\n              </ListItem>\n            </Paper>\n            <Divider />\n          </React.Fragment>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Splash);\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nconst ViewSchedules: React.FC = () => {\n  return (\n    <React.Fragment>\n      <Button variant=\"contained\" color=\"primary\">\n        Hello World\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default ViewSchedules;\n","/**\n * Entity Names:\n *  Header\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 11, 2020\n * Derived From:\n *  create-react-app\n *\n * The Footer functional component provides buttons at the bottom of the screen.\n *\n */\nimport React from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Toolbar,\n  AppBar\n} from \"@material-ui/core\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    appBar: {\n      top: \"auto\",\n      bottom: 0\n    },\n    toolBar: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }\n  });\n\n/**\n * @typeparam <typeof styles>\n */\ninterface Props extends WithStyles<typeof styles> {\n  buttons: JSX.Element[];\n}\n\n/**\n * The [[Footer]] functional component sits at the bottom of the application.\n * @param props used to pass in stylings\n * @returns React Element; the component footer\n */\nconst Footer: React.FC<Props> = props => {\n  const { buttons, classes } = props;\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          {buttons.map((button: JSX.Element, index: number) => (\n            <React.Fragment key={index}>{button}</React.Fragment>\n          ))}\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Footer);\n","/**\n * Entity Names:\n *\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Mar 9, 2020\n * Derived From:\n *  material-ui\n *\n * Modal component for sending manual commands to blinds\n */\nimport React, { useState } from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Modal,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from \"@material-ui/core\";\nimport { BLIND_MODE } from \"../../../res/blindTypes\";\n\n/**\n * 'styles' allows for styling within typscript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0)\n    },\n    modalDiv: {\n      position: \"absolute\",\n      width: \"90%\",\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid\",\n      borderRadius: \"4px\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      midWidth: 120\n    },\n    inputs: {\n      display: \"flex\",\n      justifyContent: \"left\"\n    }\n  });\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\n/**\n * @typeparam <typeof styles>\n * @param stats stats to display\n */\ninterface Props extends WithStyles<typeof styles> {\n  sendCommand: (mode: BLIND_MODE, duration: number, amount?: number) => void;\n  open: boolean;\n  handleClose: () => void;\n}\n\n/**\n * The [[StatusPaper]] functional component provides stats in a compact display\n * @param props used to pass in stylings\n * @returns React Element; A material-ui 'paper' component displaying stats\n */\nconst CommandModal: React.FC<Props> = props => {\n  const { classes, open, handleClose, sendCommand } = props;\n  const [modalStyle] = useState(getModalStyle);\n  const [duration, setDuration] = useState(30);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setDuration(event.target.value as number);\n  };\n  return (\n    <React.Fragment>\n      <Modal open={open} onClose={handleClose}>\n        <div\n          style={modalStyle}\n          className={classes.modalDiv}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <h2 id=\"simple-modal-title\">Manual Control</h2>\n          <p id=\"simple-modal-description\">Control the blinds directly</p>\n          <div className={classes.inputs}>\n            <FormControl className={classes.formControl}>\n              <InputLabel>Duration</InputLabel>\n              <Select value={duration} onChange={handleChange}>\n                <MenuItem value={30}>30 Mins</MenuItem>\n                <MenuItem value={60}>1 Hour</MenuItem>\n                <MenuItem value={240}>4 Hours</MenuItem>\n                <MenuItem value={0}>Today</MenuItem>\n              </Select>\n            </FormControl>\n            <Button\n              onClick={() => {\n                sendCommand(\"LIGHT\", duration);\n                handleClose();\n              }}\n            >\n              Open\n            </Button>\n            <Button\n              onClick={() => {\n                sendCommand(\"DARK\", duration);\n                handleClose();\n              }}\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommandModal);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button\n} from \"@material-ui/core\";\n\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport BorderAllIcon from \"@material-ui/icons/BorderAll\";\nimport FormatAlignJustifyIcon from \"@material-ui/icons/FormatAlignJustify\";\nimport Blind from \"../../../res/Classes/Blind\";\nimport { Link } from \"react-router-dom\";\n// import { IStats } from \"../../../res/Interfaces\";\nimport config from \"../../../config\";\nimport Footer from \"../../Atoms/Footer\";\nimport CommandModal from \"../../Molecules/CommandModal\";\nimport { BLIND_MODE } from \"../../../res/blindTypes\";\n\nconst LOADING_MESSAGE = \"loading...\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0)\n    },\n    title: {\n      flexGrow: 1,\n      padding: theme.spacing(2)\n    },\n    list: {\n      padding: theme.spacing(0)\n    }\n  });\n/**\n * @typeparam <typeof styles>\n * @param blind the blind in question\n */\ninterface Props extends WithStyles<typeof styles> {\n  blind: Blind;\n}\n\n/**\n * The [[BlindMenu]] functional component acts as the\n * primary landing page for the application.\n * @param props used to pass in stylings and the blind object\n * @returns React Element; the BlindMenu component\n */\nconst BlindMenu: React.FC<Props> = props => {\n  const { classes, blind } = props;\n  const [stats, setStats] = useState();\n  const [schedule, setSchedule] = useState();\n  const [blindMode, setblindMode] = useState(config.defaultObjects.blindMode);\n\n  const [modalOpen, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (blind === undefined) {\n      return;\n    }\n    blind.getSchedule().then(scheduleResponse => {\n      setSchedule(scheduleResponse);\n      setblindMode(blind.GetCurrentBehavior(scheduleResponse));\n    });\n    blind.getStatus().then(statsResponse => {\n      setStats(statsResponse);\n    });\n  }, [blind]);\n\n  const sendCommand = (\n    mode: BLIND_MODE,\n    duration: number,\n    position?: number\n  ) => {\n    let setPosition: number = 0;\n    if (position !== undefined) {\n      setPosition = position;\n    }\n    blind.sendCommand({\n      mode: mode,\n      duration: duration,\n      position: setPosition\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Typography className={classes.title} color=\"textPrimary\">\n          Current Status:\n        </Typography>\n        <List className={classes.root}></List>\n        <ListItem>\n          <ListItemIcon>\n            {stats === undefined ? (\n              <AutorenewIcon />\n            ) : stats.motorPosition > config.MOTORMIDPOINT ? (\n              <BorderAllIcon />\n            ) : (\n              <FormatAlignJustifyIcon />\n            )}\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Motor Position\"\n            primary={\n              stats === undefined ? LOADING_MESSAGE : stats.motorPosition\n            } //convert\n          />\n        </ListItem>\n\n        <ListItem>\n          <ListItemIcon>\n            {schedule === undefined ? (\n              <AutorenewIcon />\n            ) : blindMode.type === \"ECO\" ? (\n              <EcoIcon />\n            ) : blindMode.type === \"LIGHT\" ? (\n              <Brightness5Icon />\n            ) : (\n              <Brightness3Icon />\n            )}\n          </ListItemIcon>\n          <ListItemText\n            secondary=\"Behavior\"\n            primary={schedule === undefined ? LOADING_MESSAGE : blindMode.type} //convert\n          />\n        </ListItem>\n      </Paper>\n      <Footer\n        buttons={[\n          <Button onClick={handleOpen} color=\"inherit\">\n            Manual Control\n          </Button>,\n          <Button\n            component={Link}\n            to={config.root + \"/blind/createschedule\"}\n            color=\"inherit\"\n          >\n            Set Schedule\n          </Button>\n        ]}\n      />\n      <CommandModal\n        open={modalOpen}\n        handleClose={handleClose}\n        sendCommand={sendCommand}\n      ></CommandModal>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(BlindMenu);\n","/**\n * Entity Names:\n *  CreateSchedule\n *  props\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 18, 2020\n * Derived From:\n *\n *\n * Schedule builder UI\n */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  Paper,\n  Button,\n  Typography,\n  GridList,\n  GridListTile,\n  Box\n} from \"@material-ui/core\";\n\nimport Blind from \"../../../res/Classes/Blind\";\nimport { Link } from \"react-router-dom\";\nimport config from \"../../../config\";\nimport Footer from \"../../Atoms/Footer\";\nimport { daysList } from \"../../../res/blindTypes\";\nimport { ISchedule } from \"../../../res/Interfaces\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(0)\n    },\n    weekWrapper: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(8, minmax(25px, 1fr))\",\n      gridTemplateRows: \"1fr\",\n      gridAutoFlow: \"dense\",\n      justifyItems: \"stretch\",\n      alignItems: \"stretch\",\n      margin: theme.spacing(1)\n    },\n    timeSlotWrapper: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"scroll\",\n      height: \"70vh\",\n      margin: theme.spacing(1)\n    },\n    dayHeader: {\n      textAlign: \"center\"\n    },\n    timeLegend: {\n      textAlign: \"center\",\n      alignItems: \"center\",\n      display: \"grid\",\n      height: theme.spacing(6),\n      borderBottomColor: \"rgb(139, 195, 74)\" //material ui is currently bugged, so this is required\n    },\n    timeSlot: {\n      height: theme.spacing(6),\n      borderBottomColor: \"rgb(139, 195, 74)\" //same here\n    },\n    title: {\n      flexGrow: 1,\n      padding: theme.spacing(2)\n    },\n    list: {\n      padding: theme.spacing(0)\n    }\n  });\n/**\n * @typeparam <typeof styles>\n * @param blind the blind in question\n */\ninterface Props extends WithStyles<typeof styles> {\n  blind: Blind;\n}\n\n/**\n * @param title slot title\n * @param colour slot colour\n */\ninterface ITimeSlotUI {\n  title?: string;\n  colour?: string;\n}\n\n/**\n * The [[CreateSchedule]] functional component acts as the\n * UI for creating and setting schedules\n * @param props used to pass in stylings and the blind object\n * @returns React Element; the BlindMenu component\n */\nconst CreateSchedule: React.FC<Props> = props => {\n  const { classes, blind } = props;\n  const [schedule, setSchedule] = useState(config.defaultObjects.schedule);\n  const [tempSchedule, setTempSchedule] = useState(schedule);\n  const [mode, setMode] = useState(config.defaultObjects.blindMode);\n\n  useEffect(() => {\n    if (blind === undefined) {\n      return;\n    }\n    blind.getSchedule().then(scheduleResponse => {\n      setSchedule(scheduleResponse);\n    });\n  }, [blind]);\n\n  let dayTitle = (day: string) => day[0].toLocaleUpperCase() + day.slice(1, 3);\n  var weekDays = [\"Time\", ...daysList.map((day: string) => dayTitle(day))].map(\n    (title: string, i: number) => (\n      <Typography key={title} className={classes.dayHeader}>\n        {title}\n      </Typography>\n    )\n  );\n\n  const timeLegend: ITimeSlotUI[] = [];\n  for (let i = 0; i < 24 * 4; i++) {\n    let hour: number = Math.floor(i / 4);\n    let period: string = hour > 11 ? \"PM\" : \"AM\";\n    if (period === \"PM\" && hour !== 12) {\n      hour -= 12;\n    } else if (hour === 0) {\n      hour += 12;\n    }\n    let minute: number = (i % 4) * 15;\n\n    let timeString: string = `${hour}:${\n      minute === 0 ? \"00\" : minute\n    } ${period} `;\n    timeLegend.push({ title: timeString });\n  }\n\n  let emptySlot: ITimeSlotUI = { title: \"\" };\n  let emptyArray: ITimeSlotUI[] = [];\n  for (let i = 0; i < 7; i++) {\n    emptyArray.push(emptySlot);\n  }\n  let scheduleArray: ITimeSlotUI[] = [];\n  timeLegend.forEach((time: ITimeSlotUI) =>\n    scheduleArray.push(time, ...emptyArray)\n  );\n\n  function makeSlotTile(item: ITimeSlotUI, i: number) {\n    let className = classes.timeSlot;\n    let borderLeft = 0;\n    let borderTop = i < 8 ? 1 : 0;\n    let borderBottom = Math.floor(i / 8) % 4 === 3 ? 2 : 1;\n    let borderColor = \"primary.main\";\n    if (i % 8 === 0) {\n      borderLeft = 1;\n      className = classes.timeLegend;\n    }\n    return (\n      <Box\n        borderBottom={borderBottom}\n        borderColor={borderColor}\n        borderTop={borderTop}\n        borderLeft={borderLeft}\n        border={1}\n        className={className}\n        onClick={() => console.log(\"nice\")}\n      >\n        {item.title}\n      </Box>\n    );\n  }\n\n  var calendarGrid = (\n    <GridList spacing={0} cellHeight=\"auto\" cols={8}>\n      {scheduleArray.map((item: ITimeSlotUI, i: number) => (\n        <GridListTile key={i} cols={1}>\n          {makeSlotTile(item, i)}\n        </GridListTile>\n      ))}\n    </GridList>\n  );\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <div className={classes.weekWrapper}>{weekDays}</div>\n        <div className={classes.timeSlotWrapper}>{calendarGrid}</div>\n      </Paper>\n      <Footer\n        buttons={[\n          <Button\n            // onClick={() => {\n            //   switchSchedule(schedule);\n            // }}\n            component={Link}\n            to={config.root + \"/blind\"}\n            color=\"inherit\"\n          >\n            Save\n          </Button>,\n          <Button component={Link} to={config.root + \"/blind\"} color=\"inherit\">\n            Cancel\n          </Button>\n        ]}\n      />\n    </React.Fragment>\n  );\n};\n\n// function arrayFromSchedule(schedule: ISchedule) {}\n\n// function scheduleFromArray() {}\n\nexport default withStyles(styles)(CreateSchedule);\n","/**\n * Entity Names:\n *  App\n *  styles\n * Author(s):\n *  Kevin de Haan\n * Date Created:\n *  Feb 1, 2020\n * Derived From:\n *  create-react-app\n *\n * The App object acts as the root of the application.\n * All other components branch out in usage from this functional component.\n * 'styles' allows for styling within typescript code.\n *\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport config from \"../config\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { defaultTheme } from \"../res/styles/Themes\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Header from \"../Components/Atoms/Header\";\nimport {\n  Theme,\n  createStyles,\n  withStyles,\n  WithStyles,\n  ThemeProvider\n} from \"@material-ui/core\";\nimport Splash from \"../Components/Pages/Splash\";\nimport ViewSchedules from \"../Components/Pages/ViewSchedules\";\nimport BlindMenu from \"../Components/Pages/BlindMenu\";\nimport Blind from \"../res/Classes/Blind\";\nimport { IStats } from \"../res/Interfaces\";\nimport CreateSchedule from \"../Components/Pages/CreateSchedule\";\n\n/**\n * 'styles' allows for styling within typescript code.\n * @param theme originates from Material-UI\n */\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      margin: \"0\",\n      width: \"100vw\",\n      position: \"fixed\"\n    }\n  });\n\n/**\n * @typeparam <typeof styles>\n */\ninterface Props extends WithStyles<typeof styles> {}\n\n/**\n * The [[App]] functional component acts as the root of the application.\n * All other components branch out in usage from this component.\n * @param props used to pass in stylings\n * @returns React Element; the application\n */\nconst App = (props: Props) => {\n  const { classes } = props;\n\n  const testBlinds = config.testCases.blinds;\n  let defaultStats = config.defaultObjects.stats;\n\n  const [blinds, setBlinds] = useState(testBlinds);\n  const [currentBlind, setBlind] = useState();\n  const [title, setTitle] = useState(\"Smart Blinds\");\n\n  // temporary until the webserver is configured\n  const [currentStats, setStats] = useState(defaultStats);\n\n  //set timer to update blinds every 5 seconds\n  useEffect(() => {\n    updateStats();\n    // const interval = setInterval(() => {\n    //   updateStats();\n    //   console.log(\"triggered\");\n    // }, 1000 * 5);\n    // return () => clearInterval(interval);\n  }, []);\n\n  function updateStats() {\n    if (blinds.length < 1) {\n      return;\n    }\n    blinds[0].getStatus().then((statusResponse: IStats) => {\n      setStats(statusResponse);\n    });\n  }\n\n  function switchBlind(blind: Blind) {\n    setBlind(blind);\n    setTitle(blind.getName());\n  }\n\n  var location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname === config.root + config.defaultPath) {\n      setTitle(config.mainTitle);\n    }\n  }, [location]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ThemeProvider theme={defaultTheme}>\n        <Header title={title} />\n        <Switch>\n          <Route\n            exact\n            path={config.root + \"/\"}\n            render={props => (\n              <Splash\n                {...props}\n                stats={currentStats}\n                blindList={blinds}\n                switchBlind={switchBlind}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={config.root + \"/blind\"}\n            render={props => <BlindMenu {...props} blind={currentBlind} />}\n          />\n          <Route path={config.root + \"/schedules\"} component={ViewSchedules} />\n          <Route\n            path={config.root + \"/blind/createSchedule\"}\n            render={props => <CreateSchedule {...props} blind={currentBlind} />}\n          />\n          <Redirect to={config.root + config.defaultPath} />\n        </Switch>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./res/styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}