{"version":3,"sources":["res/Classes/BlindAPI/BlindAPI.ts","res/blindTypes.tsx","res/Classes/Blind/Blind.ts","config.ts","res/styles/Themes/themes.ts","Components/Atoms/Header/Header.tsx","Components/Molecules/StatusPaper/StatusPaper.tsx","Components/Pages/Splash/Splash.tsx","Components/Pages/ViewSchedules/ViewSchedules.tsx","Components/Atoms/Footer/Footer.tsx","Components/Pages/BlindMenu/BlindMenu.tsx","Components/Pages/CreateSchedule/CreateSchedule.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["BlindAPI","credentials","this","body","requestInit","method","mode","headers","Auth","password","fetch","address","daysList","Blind","name","status","indoorTemp","outdoorTemp","cloudCoverage","motorPosition","promise","Promise","resolve","reject","setTimeout","schedule","now","Date","scheduleDay","getUTCDay","length","defaultMode","forEach","timeSlot","TimeslotIsActive","time","getTimeOfDay","date","getUTCHours","getUTCMinutes","getUTCSeconds","timeOfDay","start","end","config","testCases","schedules","createFetch","JSON","stringify","defaultBlindMode","type","defaultSchedule","monday","tuesday","wednesday","thursday","friday","saturday","sunday","root","defaultPath","mainTitle","MOTORMIDPOINT","stats","blinds","defaultObjects","blindMode","defaultTheme","createMuiTheme","palette","primary","lightGreen","secondary","lightBlue","withStyles","theme","createStyles","flexGrow","menuButton","marginRight","spacing","title","props","classes","Fragment","AppBar","position","Toolbar","IconButton","component","Link","to","edge","className","color","aria-label","Typography","variant","padding","Paper","List","ListItem","ListItemIcon","ListItemText","list","blindList","switchBlind","Divider","map","blind","key","getAddress","button","onClick","getName","ViewSchedules","Button","appBar","top","bottom","toolBar","display","justifyContent","buttons","index","useState","setStats","setSchedule","setblindMode","useEffect","undefined","getSchedule","then","scheduleResponse","GetCurrentBehavior","getStatus","statsResponse","weekWrapper","gridTemplateColumns","gridTemplateRows","gridAutoFlow","justifyItems","alignItems","margin","timeSlotWrapper","flexWrap","overflow","height","dayHeader","textAlign","timeLegend","borderBottomColor","weekDays","day","toLocaleUpperCase","slice","dayTitle","i","hour","Math","floor","period","minute","timeString","push","emptySlot","emptyArray","scheduleArray","calendarGrid","GridList","cellHeight","cols","item","GridListTile","borderLeft","borderTop","borderBottom","Box","borderColor","border","console","log","makeSlotTile","width","testBlinds","testStats","currentBlind","setBlind","setTitle","currentStats","statusResponse","location","useLocation","pathname","CssBaseline","ThemeProvider","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea39dfc8.chunk.js","sourcesContent":["import { ICredentials } from \"../../Interfaces\";\r\n\r\nclass BlindAPI {\r\n  private credentials: ICredentials;\r\n\r\n  constructor(credentials: ICredentials) {\r\n    this.credentials = credentials;\r\n  }\r\n\r\n  async createFetch(body: any): Promise<Response> {\r\n    let requestInit: RequestInit = {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"text/json\",\r\n        Auth: this.credentials.password\r\n      },\r\n      body: body\r\n    };\r\n    return fetch(this.credentials.address, requestInit);\r\n  }\r\n}\r\n\r\nexport default BlindAPI;\r\n","/**\r\n * Entity Names:\r\n *  DAY_OF_WEEK\r\n *  daysList\r\n * Author(s):\r\n *  Kevin de Haan\r\n * Date Created:\r\n *  Mar 3, 2020\r\n * Derived From:\r\n *  N/A\r\n *\r\n * Type declarations and utilities\r\n */\r\n\r\nexport type DAY_OF_WEEK =\r\n  | \"sunday\"\r\n  | \"monday\"\r\n  | \"tuesday\"\r\n  | \"wednesday\"\r\n  | \"thursday\"\r\n  | \"friday\"\r\n  | \"saturday\";\r\n\r\nexport const daysList: DAY_OF_WEEK[] = [\r\n  \"sunday\",\r\n  \"monday\",\r\n  \"tuesday\",\r\n  \"wednesday\",\r\n  \"thursday\",\r\n  \"friday\",\r\n  \"saturday\"\r\n];\r\n","/**\r\n * Entity Names:\r\n *  Blind\r\n * Author(s):\r\n *  Kevin de Haan\r\n * Date Created:\r\n *  Feb 1, 2020\r\n * Derived From:\r\n *  N/A\r\n *\r\n * Object that abstracts blind actions to the rest of the application\r\n */\r\nimport BlindAPI from \"../BlindAPI\";\r\nimport {\r\n  ICredentials,\r\n  IStats,\r\n  ISchedule,\r\n  IBlindMode,\r\n  ITimeSlot\r\n} from \"../../Interfaces\";\r\nimport config from \"../../../config\";\r\nimport { networkInterfaces } from \"os\";\r\nimport { daysList } from \"../../blindTypes\";\r\n\r\n/**\r\n * Abstracts Smart Blind operation\r\n */\r\nclass Blind {\r\n  private name: string;\r\n  private BlindAPI: BlindAPI;\r\n  private address: string;\r\n  /**\r\n   * @param name Name of blind device\r\n   * @param credentials credential object for access and authentication\r\n   */\r\n  constructor(name: string, credentials: ICredentials) {\r\n    this.BlindAPI = new BlindAPI(credentials);\r\n    this.name = name;\r\n    this.address = credentials.address;\r\n  }\r\n\r\n  /**\r\n   * @returns a promise that resolves to an [[IStats]] object\r\n   */\r\n  async getStatus(): Promise<IStats> {\r\n    // let response = await this.BlindAPI.createFetch(\"Status\");\r\n    // let responseJSON = await response.clone().json();\r\n    // let status: IStats = responseJSON.status;\r\n    let status = {\r\n      // temp\r\n      indoorTemp: 22,\r\n      outdoorTemp: -23,\r\n      cloudCoverage: \"High\",\r\n      motorPosition: 50\r\n    };\r\n\r\n    const promise = new Promise<IStats>((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve(status);\r\n      }, 500);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * @returns current behavior mode\r\n   */\r\n  GetCurrentBehavior(schedule: ISchedule): IBlindMode {\r\n    let now: Date = new Date();\r\n    let scheduleDay: ITimeSlot[] = schedule[daysList[now.getUTCDay()]];\r\n    if (scheduleDay.length === 0) {\r\n      return schedule.defaultMode;\r\n    }\r\n    scheduleDay.forEach((timeSlot: ITimeSlot) => {\r\n      if (this.TimeslotIsActive(timeSlot, now)) {\r\n        return timeSlot.mode;\r\n      }\r\n    });\r\n    return schedule.defaultMode;\r\n  }\r\n\r\n  /**\r\n   * @returns if specified time is in the specified time slot\r\n   */\r\n  TimeslotIsActive(timeSlot: ITimeSlot, time: Date): boolean {\r\n    function getTimeOfDay(date: Date) {\r\n      return `${date.getUTCHours}${date.getUTCMinutes}${date.getUTCSeconds}`;\r\n    }\r\n    let timeOfDay: string = getTimeOfDay(time);\r\n    if (\r\n      timeOfDay >= getTimeOfDay(timeSlot.start) &&\r\n      timeOfDay < getTimeOfDay(timeSlot.end)\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @returns a promise that resolves to an [[ISchedule]] object\r\n   */\r\n  async getSchedule(): Promise<ISchedule> {\r\n    // let response = await this.BlindAPI.createFetch(\"Status\");\r\n    // let responseJSON = await response.clone().json();\r\n    // let schedule: ISchedule = responseJSON.status;\r\n\r\n    var schedule = config.testCases.schedules[0];\r\n    const promise = new Promise<ISchedule>((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve(schedule);\r\n      }, 500);\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * @param schedule sends or configures a new schedule to a device\r\n   */\r\n  async setSchedule(schedule: ISchedule) {\r\n    this.BlindAPI.createFetch(JSON.stringify(schedule));\r\n    // let responseJSON = await response.clone().json();\r\n  }\r\n\r\n  /**\r\n   * @returns name of the blind\r\n   */\r\n  getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  /**\r\n   * @param name sets a new name for the blind\r\n   */\r\n  setName(name: string) {\r\n    this.name = name;\r\n  }\r\n\r\n  /**\r\n   * @returns IP address of blind device\r\n   */\r\n  getAddress(): string {\r\n    return this.address;\r\n  }\r\n}\r\n\r\nexport default Blind;\r\n","import { ISchedule, IStats, IBlindMode } from \"./res/Interfaces\";\r\nimport Blind from \"../src/res/Classes/Blind\";\r\n\r\nconst defaultBlindMode: IBlindMode = {\r\n  type: \"ECO\"\r\n};\r\n\r\nconst defaultSchedule: ISchedule = {\r\n  defaultMode: defaultBlindMode,\r\n  monday: [],\r\n  tuesday: [],\r\n  wednesday: [],\r\n  thursday: [],\r\n  friday: [],\r\n  saturday: [],\r\n  sunday: []\r\n};\r\n\r\nlet testBlind: Blind = new Blind(\"Test Blinds\", {\r\n  address: \"localhost\",\r\n  password: \"123pass\"\r\n});\r\nlet otherBlind: Blind = new Blind(\"Other blinds\", {\r\n  address: \"1.255.02.3\",\r\n  password: \"pass123\"\r\n});\r\nconst sampleStats: IStats = {\r\n  indoorTemp: 21,\r\n  outdoorTemp: 20,\r\n  cloudCoverage: \"Low\",\r\n  motorPosition: 0\r\n};\r\n\r\ninterface IConfig {\r\n  root: string;\r\n  defaultPath: string;\r\n  mainTitle: string;\r\n  MOTORMIDPOINT: number;\r\n  testCases: {\r\n    schedules: ISchedule[];\r\n    stats: IStats[];\r\n    blinds: Blind[];\r\n  };\r\n  defaultObjects: {\r\n    schedule: ISchedule;\r\n    blindMode: IBlindMode;\r\n  };\r\n}\r\n\r\nconst config: IConfig = {\r\n  root: \"/smart-blinds-webapp\",\r\n  defaultPath: \"/\",\r\n  mainTitle: \"Smart Blinds\",\r\n  MOTORMIDPOINT: 50,\r\n  testCases: {\r\n    schedules: [defaultSchedule],\r\n    stats: [sampleStats],\r\n    blinds: [testBlind, otherBlind]\r\n  },\r\n  defaultObjects: {\r\n    schedule: defaultSchedule,\r\n    blindMode: defaultBlindMode\r\n  }\r\n};\r\n\r\nexport default config;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n// import purple from \"@material-ui/core/colors/purple\";\r\n// import common from \"@material-ui/core/colors/common\";\r\n// import blueGrey from \"@material-ui/core/colors/blueGrey\";\r\n// import blue from \"@material-ui/core/colors/blue\";\r\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\r\n// import grey from \"@material-ui/core/colors/grey\";\r\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\r\n\r\nexport const defaultTheme = createMuiTheme({\r\n  palette: {\r\n    primary: lightGreen,\r\n    secondary: lightBlue\r\n  }\r\n});\r\n","/**\r\n * Entity Names:\r\n *  Header\r\n *  styles\r\n * Author(s):\r\n *  Kevin de Haan\r\n * Date Created:\r\n *  Feb 1, 2020\r\n * Derived From:\r\n *  create-react-app\r\n *\r\n * The Header functional component sits at the top of the application.\r\n *\r\n */\r\nimport React from \"react\";\r\nimport config from \"../../../config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Toolbar,\r\n  IconButton,\r\n  AppBar,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n// import HomeIcon from \"@material-ui/icons/Home\";\r\nimport LineWeightIcon from \"@material-ui/icons/LineWeight\";\r\n\r\n/**\r\n * 'styles' allows for styling within typscript code.\r\n * @param theme originates from Material-UI\r\n */\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n      flexGrow: 1\r\n    }\r\n  });\r\n\r\n/**\r\n * @typeparam <typeof styles>\r\n * @param title title to display in the header\r\n */\r\ninterface Props extends WithStyles<typeof styles> {\r\n  title: string;\r\n}\r\n\r\n/**\r\n * The [[Header]] functional component sits at the top of the application.\r\n * @param props used to pass in stylings\r\n * @returns React Element; the application header\r\n */\r\nconst Header: React.FC<Props> = props => {\r\n  const { classes, title } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            component={Link}\r\n            to={config.root + \"/\"}\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <LineWeightIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","/**\r\n * Entity Names:\r\n *  StatusPaper\r\n *  props\r\n *  styles\r\n * Author(s):\r\n *  Kevin de Haan\r\n * Date Created:\r\n *  Feb 1, 2020\r\n * Derived From:\r\n *  material-ui\r\n *\r\n * Sub component that provides received stats in a compact display.\r\n * Based on a material-ui 'Paper' component\r\n */\r\nimport React from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Paper,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport { IStats } from \"../../../res/Interfaces\";\r\n\r\n/**\r\n * 'styles' allows for styling within typscript code.\r\n * @param theme originates from Material-UI\r\n */\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(0)\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2)\r\n    }\r\n  });\r\n\r\n/**\r\n * @typeparam <typeof styles>\r\n * @param stats stats to display\r\n */\r\ninterface Props extends WithStyles<typeof styles> {\r\n  stats: IStats;\r\n}\r\n\r\n/**\r\n * The [[StatusPaper]] functional component provides stats in a compact display\r\n * @param props used to pass in stylings\r\n * @returns React Element; A material-ui 'paper' component displaying stats\r\n */\r\nconst StatusPaper: React.FC<Props> = props => {\r\n  const { classes, stats } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.root}>\r\n        <Typography className={classes.title} color=\"textPrimary\">\r\n          Current Status:\r\n        </Typography>\r\n        <List className={classes.root}></List>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            secondary=\"Indoor Temperature\"\r\n            primary={`${stats.indoorTemp}°`}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            {stats.outdoorTemp < 5 ? <AcUnitIcon /> : <WbSunnyIcon />}\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            secondary=\"Outdoor Temperature\"\r\n            primary={`${stats.outdoorTemp}°`}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <CloudIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            secondary=\"Cloud Coverage\"\r\n            primary={stats.cloudCoverage}\r\n          />\r\n        </ListItem>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(StatusPaper);\r\n","/**\r\n * Entity Names:\r\n *  Splash\r\n *  props\r\n *  styles\r\n * Author(s):\r\n *  Kevin de Haan\r\n * Date Created:\r\n *  Feb 1, 2020\r\n * Derived From:\r\n *  N/A\r\n *\r\n * Splash page for heads-up stats and access to more of the application\r\n */\r\nimport React from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  ListItemIcon,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport config from \"../../../config\";\r\nimport StatusPaper from \"../../../Components/Molecules/StatusPaper\";\r\nimport { IStats } from \"../../../res/Interfaces\";\r\nimport Blind from \"../../../res/Classes/Blind\";\r\n\r\n/**\r\n * 'styles' allows for styling within typscript code.\r\n * @param theme originates from Material-UI\r\n */\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(0)\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2)\r\n    },\r\n    list: {\r\n      padding: theme.spacing(0)\r\n    }\r\n  });\r\n/**\r\n * @typeparam <typeof styles>\r\n * @param stats stats to display, passed down to [[StatusPaper]]\r\n * @param blindList list of blind objects to display\r\n */\r\ninterface Props extends WithStyles<typeof styles> {\r\n  stats: IStats;\r\n  blindList: Blind[];\r\n  switchBlind: (blind: Blind) => void;\r\n}\r\n\r\n/**\r\n * The [[Splash]] functional component acts as the\r\n * primary landing page for the application.\r\n * @param props used to pass in stylings\r\n * @returns React Element; the Splash page\r\n */\r\nconst Splash: React.FC<Props> = props => {\r\n  const { stats, blindList, switchBlind, classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <StatusPaper stats={stats} />\r\n      <Divider />\r\n      <List className={classes.list}>\r\n        {blindList.map((blind: Blind) => (\r\n          <React.Fragment key={blind.getAddress()}>\r\n            <Paper>\r\n              <ListItem\r\n                button\r\n                onClick={() => {\r\n                  switchBlind(blind);\r\n                }}\r\n                component={Link}\r\n                to={config.root + \"/blind\"}\r\n              >\r\n                <ListItemIcon>\r\n                  <ArrowRightIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={blind.getName()} />\r\n              </ListItem>\r\n            </Paper>\r\n            <Divider />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Splash);\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst ViewSchedules: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Hello World\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ViewSchedules;\r\n","/**\r\n * Entity Names:\r\n *  Header\r\n *  styles\r\n * Author(s):\r\n *  Kevin de Haan\r\n * Date Created:\r\n *  Feb 11, 2020\r\n * Derived From:\r\n *  create-react-app\r\n *\r\n * The Footer functional component provides buttons at the bottom of the screen.\r\n *\r\n */\r\nimport React from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Toolbar,\r\n  AppBar\r\n} from \"@material-ui/core\";\r\n\r\n/**\r\n * 'styles' allows for styling within typescript code.\r\n * @param theme originates from Material-UI\r\n */\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n      flexGrow: 1\r\n    },\r\n    appBar: {\r\n      top: \"auto\",\r\n      bottom: 0\r\n    },\r\n    toolBar: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\"\r\n    }\r\n  });\r\n\r\n/**\r\n * @typeparam <typeof styles>\r\n */\r\ninterface Props extends WithStyles<typeof styles> {\r\n  buttons: JSX.Element[];\r\n}\r\n\r\n/**\r\n * The [[Footer]] functional component sits at the bottom of the application.\r\n * @param props used to pass in stylings\r\n * @returns React Element; the component footer\r\n */\r\nconst Footer: React.FC<Props> = props => {\r\n  const { buttons, classes } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolBar}>\r\n          {buttons.map((button: JSX.Element, index: number) => (\r\n            <React.Fragment key={index}>{button}</React.Fragment>\r\n          ))}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Paper,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\r\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport BorderAllIcon from \"@material-ui/icons/BorderAll\";\r\nimport FormatAlignJustifyIcon from \"@material-ui/icons/FormatAlignJustify\";\r\nimport Blind from \"../../../res/Classes/Blind\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { IStats } from \"../../../res/Interfaces\";\r\nimport config from \"../../../config\";\r\nimport Footer from \"../../Atoms/Footer\";\r\n\r\nconst LOADING_MESSAGE = \"loading...\";\r\n\r\n/**\r\n * 'styles' allows for styling within typescript code.\r\n * @param theme originates from Material-UI\r\n */\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(0)\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2)\r\n    },\r\n    list: {\r\n      padding: theme.spacing(0)\r\n    }\r\n  });\r\n/**\r\n * @typeparam <typeof styles>\r\n * @param blind the blind in question\r\n */\r\ninterface Props extends WithStyles<typeof styles> {\r\n  blind: Blind;\r\n}\r\n\r\n/**\r\n * The [[BlindMenu]] functional component acts as the\r\n * primary landing page for the application.\r\n * @param props used to pass in stylings and the blind object\r\n * @returns React Element; the BlindMenu component\r\n */\r\nconst BlindMenu: React.FC<Props> = props => {\r\n  const { classes, blind } = props;\r\n  const [stats, setStats] = useState();\r\n  const [schedule, setSchedule] = useState();\r\n  const [blindMode, setblindMode] = useState(config.defaultObjects.blindMode);\r\n\r\n  useEffect(() => {\r\n    if (blind === undefined) {\r\n      return;\r\n    }\r\n    blind.getSchedule().then(scheduleResponse => {\r\n      setSchedule(scheduleResponse);\r\n      setblindMode(blind.GetCurrentBehavior(scheduleResponse));\r\n    });\r\n    blind.getStatus().then(statsResponse => {\r\n      setStats(statsResponse);\r\n    });\r\n  }, [blind]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.root}>\r\n        <Typography className={classes.title} color=\"textPrimary\">\r\n          Current Status:\r\n        </Typography>\r\n        <List className={classes.root}></List>\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            {stats === undefined ? (\r\n              <AutorenewIcon />\r\n            ) : stats.motorPosition > config.MOTORMIDPOINT ? (\r\n              <BorderAllIcon />\r\n            ) : (\r\n              <FormatAlignJustifyIcon />\r\n            )}\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            secondary=\"Motor Position\"\r\n            primary={\r\n              stats === undefined ? LOADING_MESSAGE : stats.motorPosition\r\n            } //convert\r\n          />\r\n        </ListItem>\r\n\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            {schedule === undefined ? (\r\n              <AutorenewIcon />\r\n            ) : blindMode.type === \"ECO\" ? (\r\n              <EcoIcon />\r\n            ) : blindMode.type === \"LIGHT\" ? (\r\n              <Brightness5Icon />\r\n            ) : (\r\n              <Brightness3Icon />\r\n            )}\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            secondary=\"Behavior\"\r\n            primary={schedule === undefined ? LOADING_MESSAGE : blindMode.type} //convert\r\n          />\r\n        </ListItem>\r\n      </Paper>\r\n      <Footer\r\n        buttons={[\r\n          <Button component={Link} to={config.root + \"/\"} color=\"inherit\">\r\n            Manual Control\r\n          </Button>,\r\n          <Button\r\n            component={Link}\r\n            to={config.root + \"/blind/createschedule\"}\r\n            color=\"inherit\"\r\n          >\r\n            Set Schedule\r\n          </Button>\r\n        ]}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(BlindMenu);\r\n","/**\r\n * Entity Names:\r\n *  CreateSchedule\r\n *  props\r\n *  styles\r\n * Author(s):\r\n *  Kevin de Haan\r\n * Date Created:\r\n *  Feb 18, 2020\r\n * Derived From:\r\n *\r\n *\r\n * Schedule builder UI\r\n */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n  GridList,\r\n  GridListTile,\r\n  Box\r\n} from \"@material-ui/core\";\r\n\r\nimport Blind from \"../../../res/Classes/Blind\";\r\nimport { Link } from \"react-router-dom\";\r\nimport config from \"../../../config\";\r\nimport Footer from \"../../Atoms/Footer\";\r\nimport { daysList } from \"../../../res/blindTypes\";\r\nimport { ISchedule } from \"../../../res/Interfaces\";\r\n\r\n/**\r\n * 'styles' allows for styling within typescript code.\r\n * @param theme originates from Material-UI\r\n */\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(0)\r\n    },\r\n    weekWrapper: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(8, minmax(25px, 1fr))\",\r\n      gridTemplateRows: \"1fr\",\r\n      gridAutoFlow: \"dense\",\r\n      justifyItems: \"stretch\",\r\n      alignItems: \"stretch\",\r\n      margin: theme.spacing(1)\r\n    },\r\n    timeSlotWrapper: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      justifyContent: \"space-around\",\r\n      overflow: \"scroll\",\r\n      height: \"70vh\",\r\n      margin: theme.spacing(1)\r\n    },\r\n    dayHeader: {\r\n      textAlign: \"center\"\r\n    },\r\n    timeLegend: {\r\n      textAlign: \"center\",\r\n      alignItems: \"center\",\r\n      display: \"grid\",\r\n      height: theme.spacing(6),\r\n      borderBottomColor: \"rgb(139, 195, 74)\" //material ui is currently bugged, so this is required\r\n    },\r\n    timeSlot: {\r\n      height: theme.spacing(6),\r\n      borderBottomColor: \"rgb(139, 195, 74)\" //same here\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(2)\r\n    },\r\n    list: {\r\n      padding: theme.spacing(0)\r\n    }\r\n  });\r\n/**\r\n * @typeparam <typeof styles>\r\n * @param blind the blind in question\r\n */\r\ninterface Props extends WithStyles<typeof styles> {\r\n  blind: Blind;\r\n}\r\n\r\n/**\r\n * @param title slot title\r\n * @param colour slot colour\r\n */\r\ninterface ITimeSlotUI {\r\n  title?: string;\r\n  colour?: string;\r\n}\r\n\r\n/**\r\n * The [[CreateSchedule]] functional component acts as the\r\n * UI for creating and setting schedules\r\n * @param props used to pass in stylings and the blind object\r\n * @returns React Element; the BlindMenu component\r\n */\r\nconst CreateSchedule: React.FC<Props> = props => {\r\n  const { classes, blind } = props;\r\n  const [schedule, setSchedule] = useState(config.defaultObjects.schedule);\r\n  const [tempSchedule, setTempSchedule] = useState(schedule);\r\n\r\n  useEffect(() => {\r\n    if (blind === undefined) {\r\n      return;\r\n    }\r\n    blind.getSchedule().then(scheduleResponse => {\r\n      setSchedule(scheduleResponse);\r\n    });\r\n  }, [blind]);\r\n\r\n  let dayTitle = (day: string) => day[0].toLocaleUpperCase() + day.slice(1, 3);\r\n  var weekDays = [\"Time\", ...daysList.map((day: string) => dayTitle(day))].map(\r\n    (title: string, i: number) => (\r\n      <Typography key={title} className={classes.dayHeader}>\r\n        {title}\r\n      </Typography>\r\n    )\r\n  );\r\n\r\n  const timeLegend: ITimeSlotUI[] = [];\r\n  for (let i = 0; i < 24 * 4; i++) {\r\n    let hour: number = Math.floor(i / 4);\r\n    let period: string = hour > 11 ? \"PM\" : \"AM\";\r\n    if (period === \"PM\" && hour !== 12) {\r\n      hour -= 12;\r\n    } else if (hour === 0) {\r\n      hour += 12;\r\n    }\r\n    let minute: number = (i % 4) * 15;\r\n\r\n    let timeString: string = `${hour}:${\r\n      minute === 0 ? \"00\" : minute\r\n    } ${period} `;\r\n    timeLegend.push({ title: timeString });\r\n  }\r\n\r\n  let emptySlot: ITimeSlotUI = { title: \"\" };\r\n  let emptyArray: ITimeSlotUI[] = [];\r\n  for (let i = 0; i < 7; i++) {\r\n    emptyArray.push(emptySlot);\r\n  }\r\n  let scheduleArray: ITimeSlotUI[] = [];\r\n  timeLegend.forEach((time: ITimeSlotUI) =>\r\n    scheduleArray.push(time, ...emptyArray)\r\n  );\r\n\r\n  function makeSlotTile(item: ITimeSlotUI, i: number) {\r\n    let className = classes.timeSlot;\r\n    let borderLeft = 0;\r\n    let borderTop = i < 8 ? 1 : 0;\r\n    let borderBottom = Math.floor(i / 8) % 4 === 3 ? 2 : 1;\r\n    let borderColor = \"primary.main\";\r\n    if (i % 8 === 0) {\r\n      borderLeft = 1;\r\n      className = classes.timeLegend;\r\n    }\r\n    return (\r\n      <Box\r\n        borderBottom={borderBottom}\r\n        borderColor={borderColor}\r\n        borderTop={borderTop}\r\n        borderLeft={borderLeft}\r\n        border={1}\r\n        className={className}\r\n        onClick={() => console.log(\"nice\")}\r\n      >\r\n        {item.title}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  var calendarGrid = (\r\n    <GridList spacing={0} cellHeight=\"auto\" cols={8}>\r\n      {scheduleArray.map((item: ITimeSlotUI, i: number) => (\r\n        <GridListTile key={i} cols={1}>\r\n          {makeSlotTile(item, i)}\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.weekWrapper}>{weekDays}</div>\r\n        <div className={classes.timeSlotWrapper}>{calendarGrid}</div>\r\n      </Paper>\r\n      <Footer\r\n        buttons={[\r\n          <Button\r\n            // onClick={() => {\r\n            //   switchSchedule(schedule);\r\n            // }}\r\n            component={Link}\r\n            to={config.root + \"/blind\"}\r\n            color=\"inherit\"\r\n          >\r\n            Save\r\n          </Button>,\r\n          <Button component={Link} to={config.root + \"/blind\"} color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n        ]}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nfunction arrayFromSchedule(schedule: ISchedule) {}\r\n\r\nfunction scheduleFromArray() {}\r\n\r\nexport default withStyles(styles)(CreateSchedule);\r\n","/**\r\n * Entity Names:\r\n *  App\r\n *  styles\r\n * Author(s):\r\n *  Kevin de Haan\r\n * Date Created:\r\n *  Feb 1, 2020\r\n * Derived From:\r\n *  create-react-app\r\n *\r\n * The App object acts as the root of the application.\r\n * All other components branch out in usage from this functional component.\r\n * 'styles' allows for styling within typescript code.\r\n *\r\n */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport config from \"../config\";\r\nimport { Redirect, useLocation } from \"react-router\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { defaultTheme } from \"../res/styles/Themes\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Header from \"../Components/Atoms/Header\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\nimport Splash from \"../Components/Pages/Splash\";\r\nimport ViewSchedules from \"../Components/Pages/ViewSchedules\";\r\nimport BlindMenu from \"../Components/Pages/BlindMenu\";\r\nimport Blind from \"../res/Classes/Blind\";\r\nimport { IStats } from \"../res/Interfaces\";\r\nimport CreateSchedule from \"../Components/Pages/CreateSchedule\";\r\n\r\n/**\r\n * 'styles' allows for styling within typescript code.\r\n * @param theme originates from Material-UI\r\n */\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100%\",\r\n      margin: \"0\",\r\n      width: \"100vw\",\r\n      position: \"fixed\"\r\n    }\r\n  });\r\n\r\n/**\r\n * @typeparam <typeof styles>\r\n */\r\ninterface Props extends WithStyles<typeof styles> {}\r\n\r\n/**\r\n * The [[App]] functional component acts as the root of the application.\r\n * All other components branch out in usage from this component.\r\n * @param props used to pass in stylings\r\n * @returns React Element; the application\r\n */\r\nconst App = (props: Props) => {\r\n  const { classes } = props;\r\n\r\n  const testBlinds = config.testCases.blinds;\r\n  let testStats = config.testCases.stats[0];\r\n\r\n  const [blinds, setBlinds] = useState(testBlinds);\r\n  const [currentBlind, setBlind] = useState();\r\n  const [title, setTitle] = useState(\"Smart Blinds\");\r\n\r\n  // temporary until the webserver is configured\r\n  const [currentStats, setStats] = useState(testStats);\r\n\r\n  useEffect(() => {\r\n    if (blinds.length < 1) {\r\n      return;\r\n    }\r\n    blinds[0].getStatus().then((statusResponse: IStats) => {\r\n      setStats(statusResponse);\r\n    });\r\n  }, [blinds]);\r\n\r\n  function switchBlind(blind: Blind) {\r\n    setBlind(blind);\r\n    setTitle(blind.getName());\r\n  }\r\n\r\n  var location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === config.root + config.defaultPath) {\r\n      setTitle(config.mainTitle);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <Header title={title} />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={config.root + \"/\"}\r\n            render={props => (\r\n              <Splash\r\n                {...props}\r\n                stats={currentStats}\r\n                blindList={blinds}\r\n                switchBlind={switchBlind}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={config.root + \"/blind\"}\r\n            render={props => <BlindMenu {...props} blind={currentBlind} />}\r\n          />\r\n          <Route path={config.root + \"/schedules\"} component={ViewSchedules} />\r\n          <Route\r\n            path={config.root + \"/blind/createSchedule\"}\r\n            render={props => <CreateSchedule {...props} blind={currentBlind} />}\r\n          />\r\n          <Redirect to={config.root + config.defaultPath} />\r\n        </Switch>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./res/styles/index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}